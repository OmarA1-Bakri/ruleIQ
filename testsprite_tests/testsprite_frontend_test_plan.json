[
  {
    "id": "TC001",
    "title": "JWT Authentication Success",
    "description": "Verify user can successfully authenticate with valid credentials and obtain JWT access and refresh tokens.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send a login request with valid username and password to the authentication endpoint."
      },
      {
        "type": "assertion",
        "description": "Receive a HTTP 200 response with valid JWT access and refresh tokens encrypted with AES-GCM."
      },
      {
        "type": "action",
        "description": "Use the access token to access a protected endpoint."
      },
      {
        "type": "assertion",
        "description": "Access is granted and appropriate data is returned."
      }
    ]
  },
  {
    "id": "TC002",
    "title": "JWT Authentication with Invalid Credentials",
    "description": "Verify authentication fails when invalid credentials are used.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send a login request with invalid username or password to the authentication endpoint."
      },
      {
        "type": "assertion",
        "description": "Receive a HTTP 401 Unauthorized response with standardized error message."
      }
    ]
  },
  {
    "id": "TC003",
    "title": "RBAC Enforcement on Protected Endpoint",
    "description": "Verify that role-based access control (RBAC) middleware correctly restricts access based on user roles.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Authenticate as a user with limited role permissions."
      },
      {
        "type": "action",
        "description": "Attempt to access an endpoint requiring higher privilege."
      },
      {
        "type": "assertion",
        "description": "Access is denied with HTTP 403 Forbidden and appropriate error message."
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Refresh JWT Token Successfully",
    "description": "Verify that a valid refresh token can be used to obtain a new access token.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Authenticate and obtain refresh token."
      },
      {
        "type": "action",
        "description": "Send refresh request with valid refresh token."
      },
      {
        "type": "assertion",
        "description": "Receive a new JWT access token."
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Rate Limiting on Public API Endpoints",
    "description": "Verify that rate limiting middleware correctly enforces limits on public freemium API endpoints to prevent abuse.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send requests exceeding the preset rate limits to a public API endpoint."
      },
      {
        "type": "assertion",
        "description": "Receive HTTP 429 Too Many Requests response with standardized error message."
      }
    ]
  },
  {
    "id": "TC006",
    "title": "IQ Agent Compliance Orchestrator - Gap Analysis",
    "description": "Verify IQ Agent performs autonomous compliance gap analysis using Neo4j GraphRAG knowledge base returning accurate gap data.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Trigger IQ Agent to execute compliance gap analysis for a selected business profile."
      },
      {
        "type": "assertion",
        "description": "Response includes correct gap analysis data consistent with knowledge graph."
      }
    ]
  },
  {
    "id": "TC007",
    "title": "RAG Self-Critic Fact-Checking Valid Response",
    "description": "Verify RAG Self-Critic validates AI-generated compliance response, confirming factual accuracy and trust scoring.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Provide AI-generated compliance response to RAG Self-Critic for fact checking."
      },
      {
        "type": "assertion",
        "description": "Receive validation confirming response facts are correct and trust score is above threshold."
      }
    ]
  },
  {
    "id": "TC008",
    "title": "RAG Self-Critic Detects Biased Response",
    "description": "Verify RAG Self-Critic identifies and flags biased or incorrect AI responses correctly.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Provide a deliberately biased or factually incorrect AI-generated response to RAG Self-Critic."
      },
      {
        "type": "assertion",
        "description": "Response is flagged with bias or fact-check failure warnings and not delivered to user."
      }
    ]
  },
  {
    "id": "TC009",
    "title": "LangGraph Multi-agent Conversational Workflow",
    "description": "Verify LangGraph agents support conversational compliance assessments with correct state management and observability.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Initiate a multi-turn compliance assessment conversation using LangGraph agents."
      },
      {
        "type": "action",
        "description": "Respond to AI-generated questions and progress through workflow states."
      },
      {
        "type": "assertion",
        "description": "Conversation state updates correctly and observability data in LangSmith is accurate."
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Freemium Public Endpoint with Email Capture and Abuse Protection",
    "description": "Validate that public freemium AI assessment endpoint securely captures user email, dynamically generates questions, and enforces abuse protections.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Submit a compliance assessment request providing valid email."
      },
      {
        "type": "assertion",
        "description": "Questionnaire is generated dynamically and email is securely stored."
      },
      {
        "type": "action",
        "description": "Submit excessive requests to trigger abuse detection mechanisms."
      },
      {
        "type": "assertion",
        "description": "Abuse protections rate-limit or block the requests as expected."
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Business Profile Creation and Update",
    "description": "Verify users can create and update business profiles with all mandatory fields and data mappings correctly persisted.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Create a new business profile with valid data via API."
      },
      {
        "type": "assertion",
        "description": "Business profile is persisted with correctly mapped database fields."
      },
      {
        "type": "action",
        "description": "Update an existing business profile's data."
      },
      {
        "type": "assertion",
        "description": "Updates are saved and reflected on retrieval."
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Evidence Upload and Audit Trail",
    "description": "Verify users can upload compliance evidence documents and that an audit trail is maintained accurately.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Upload a compliance document via the evidence management endpoint."
      },
      {
        "type": "assertion",
        "description": "Document is stored and linked to the relevant compliance controls."
      },
      {
        "type": "action",
        "description": "Verify audit trail shows upload metadata and user activity."
      },
      {
        "type": "assertion",
        "description": "Audit logs correctly capture evidence upload events."
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Dashboard Real-time Compliance Analytics",
    "description": "Verify dashboard displays accurate real-time compliance scores, risk visualizations, and implementation progress.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Access dashboard with active compliance data."
      },
      {
        "type": "assertion",
        "description": "Compliance scores, risks, and progress graphs render correctly and reflect current data."
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Policy Generation via AI with Template Customization",
    "description": "Verify AI powered policy generation creates accurate and customizable policies using templates and user input.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Request AI policy generation specifying template and customization parameters."
      },
      {
        "type": "assertion",
        "description": "Generated policy document matches requested template and parameterized inputs."
      },
      {
        "type": "action",
        "description": "Update policy parameters and regenerate."
      },
      {
        "type": "assertion",
        "description": "Updated policy reflects new customizations."
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Circuit Breaker Activation for AI Service Failures",
    "description": "Test that the circuit breaker pattern triggers protection and fallback mechanisms upon AI service failures or overloads.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate AI service failure or latency exceeding threshold."
      },
      {
        "type": "assertion",
        "description": "Circuit breaker activates, AI calls are short-circuited, and fallback responses returned."
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Compliance Knowledge Graph Initialization and Maintenance",
    "description": "Verify the Neo4j graph database is properly initialized with up-to-date compliance data and can be updated reliably.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Initialize knowledge graph with baseline compliance data."
      },
      {
        "type": "assertion",
        "description": "Graph contains correct domain and regulation nodes and edges."
      },
      {
        "type": "action",
        "description": "Apply update to compliance data set and ensure graph updates without data loss."
      },
      {
        "type": "assertion",
        "description": "Updated graph reflects new compliance requirements."
      }
    ]
  },
  {
    "id": "TC017",
    "title": "API Compliance with OpenAPI Documentation and Standardized Error Responses",
    "description": "Ensure all API endpoints match OpenAPI specs and return standardized error formats on invalid inputs or failures.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send requests with valid and invalid data to all API endpoints."
      },
      {
        "type": "assertion",
        "description": "Responses match OpenAPI documented schemas and errors follow standardized structure."
      }
    ]
  },
  {
    "id": "TC018",
    "title": "GDPR Compliance for Data Handling",
    "description": "Verify that user data handling, including consent recording and PII processing, complies with GDPR requirements.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Submit data subject requests including consent and data erasure via the UI and APIs."
      },
      {
        "type": "assertion",
        "description": "Data is processed, stored, or deleted in compliance with GDPR policies and logged appropriately."
      }
    ]
  },
  {
    "id": "TC019",
    "title": "Performance Testing - Basic Query Response Time",
    "description": "Verify API response times for basic queries are under 200 milliseconds.",
    "category": "performance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send typical basic queries to endpoints multiple times."
      },
      {
        "type": "assertion",
        "description": "Ensure 95% of responses return in under 200 ms."
      }
    ]
  },
  {
    "id": "TC020",
    "title": "Performance Testing - Complex Assessment Execution Time",
    "description": "Verify that complex compliance assessments do not exceed 3 minutes response time.",
    "category": "performance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Trigger a full compliance assessment involving IQ Agent and LangGraph workflows."
      },
      {
        "type": "assertion",
        "description": "Complete assessment and return results within 3 minutes."
      }
    ]
  },
  {
    "id": "TC021",
    "title": "Security Audit - Authentication and Session Management",
    "description": "Validate security audit findings remediation including strong password policies, token expiry, session management, and encryption.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Perform penetration tests and vulnerability scans focusing on authentication and session handling."
      },
      {
        "type": "assertion",
        "description": "No critical vulnerabilities found; all security controls function as expected."
      }
    ]
  },
  {
    "id": "TC022",
    "title": "Monitoring - Detection of Rate Limit Breaches",
    "description": "Verify monitoring systems detect rate limit violations and generate alerts appropriately.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Trigger multiple rate limit breaches on API endpoints."
      },
      {
        "type": "assertion",
        "description": "Monitoring system generates alerts and logs breaches for security team."
      }
    ]
  },
  {
    "id": "TC023",
    "title": "Database Migration - Schema Versioning and Rollback",
    "description": "Verify Alembic-based migrations apply correctly across environments and can be rolled back safely.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Apply database migration to update schema."
      },
      {
        "type": "assertion",
        "description": "Migration completes without errors and schema changes are effective."
      },
      {
        "type": "action",
        "description": "Perform rollback of the migration."
      },
      {
        "type": "assertion",
        "description": "Schema reverts properly with no data loss."
      }
    ]
  },
  {
    "id": "TC024",
    "title": "Frontend Integration Using Standardized API Client",
    "description": "Verify frontend components use the standardized API client with automatic versioning and error handling.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Invoke API calls from frontend components."
      },
      {
        "type": "assertion",
        "description": "API calls succeed, errors are handled gracefully, and versioning headers are included."
      }
    ]
  },
  {
    "id": "TC025",
    "title": "End-to-End Freemium Assessment Flow",
    "description": "Validate the complete user flow for freemium AI assessments including signup, email capture, assessment initiation, AI risk scoring, and result delivery.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "User signs up or logs in."
      },
      {
        "type": "action",
        "description": "User starts freemium compliance assessment through public endpoint."
      },
      {
        "type": "action",
        "description": "User provides answers to AI-generated dynamic questions."
      },
      {
        "type": "assertion",
        "description": "User receives AI-driven risk score and recommendations."
      }
    ]
  },
  {
    "id": "TC026",
    "title": "Security Input Validation and Sanitization",
    "description": "Verify system validates and sanitizes all user inputs preventing injection and other attacks.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Submit inputs containing SQL injection, XSS, and other malicious payloads."
      },
      {
        "type": "assertion",
        "description": "Inputs are rejected or sanitized; no unauthorized data access or script execution occurs."
      }
    ]
  },
  {
    "id": "TC027",
    "title": "Asynchronous Task Queue Execution with Celery",
    "description": "Validate that long-running tasks utilize Celery background queue and complete successfully.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Trigger long-running compliance assessment or report generation task."
      },
      {
        "type": "assertion",
        "description": "Task is queued and executed asynchronously; status observable via API."
      }
    ]
  },
  {
    "id": "TC028",
    "title": "OpenAPI Documentation Completeness and Accuracy",
    "description": "Verify that all API endpoints are accurately documented in OpenAPI and Swagger UI.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Access API documentation endpoint."
      },
      {
        "type": "assertion",
        "description": "All endpoints are present with correct request/response schemas and descriptions."
      }
    ]
  },
  {
    "id": "TC029",
    "title": "Docker Multi-environment Deployment Validation",
    "description": "Verify Docker setup supports running the application correctly across development, production, and freemium environments.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Build and run Docker containers with docker-compose for each environment."
      },
      {
        "type": "assertion",
        "description": "All services start successfully; environment-specific configs are applied."
      }
    ]
  },
  {
    "id": "TC030",
    "title": "Implementation Tracking Progress Monitoring",
    "description": "Verify that implementation tracking captures and reports compliance status updates accurately.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Update compliance implementation status via API."
      },
      {
        "type": "assertion",
        "description": "Dashboard and reports reflect updated implementation progress."
      }
    ]
  }
]
