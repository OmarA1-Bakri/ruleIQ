{"created": 1756274371.8369713, "duration": 8.171580076217651, "exitcode": 2, "root": "/home/omar/Documents/ruleIQ", "environment": {}, "summary": {"total": 0, "collected": 894}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/ai/golden_datasets", "outcome": "passed", "result": []}, {"nodeid": "tests/ai/test_compliance_accuracy.py", "outcome": "failed", "result": [], "longrepr": "tests/ai/test_compliance_accuracy.py:16: in <module>\n    from services.ai.assistant import ComplianceAssistant\nservices/ai/__init__.py:8: in <module>\n    from . import assessment_tools, evidence_tools, regulation_tools  # noqa: F401\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nservices/ai/assessment_tools.py:12: in <module>\n    from config.logging_config import get_logger\nconfig/logging_config.py:18: in <module>\n    from config.settings import settings\nconfig/settings.py:475: in <module>\n    settings = get_settings()\n               ^^^^^^^^^^^^^^\nconfig/settings.py:448: in get_settings\n    return _get_or_create_settings()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\nconfig/settings.py:460: in _get_or_create_settings\n    _settings = Settings()\n                ^^^^^^^^^^\n.venv/lib/python3.11/site-packages/pydantic_settings/main.py:188: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Settings\nE   environment\nE     Input should be 'development', 'staging', 'production' or 'testing' [type=enum, input_value='test', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/enum"}, {"nodeid": "tests/ai", "outcome": "passed", "result": [{"nodeid": "tests/ai/golden_datasets", "type": "Dir"}, {"nodeid": "tests/ai/test_compliance_accuracy.py", "type": "Module"}]}, {"nodeid": "tests/base", "outcome": "passed", "result": []}, {"nodeid": "tests/consistency", "outcome": "passed", "result": []}, {"nodeid": "tests/database/test_freemium_models.py::TestAssessmentLead", "outcome": "passed", "result": [{"nodeid": "tests/database/test_freemium_models.py::TestAssessmentLead::test_create_assessment_lead_minimal", "type": "Function", "lineno": 25}, {"nodeid": "tests/database/test_freemium_models.py::TestAssessmentLead::test_create_assessment_lead_with_utm", "type": "Function", "lineno": 46}, {"nodeid": "tests/database/test_freemium_models.py::TestAssessmentLead::test_assessment_lead_email_unique_constraint", "type": "Function", "lineno": 71}, {"nodeid": "tests/database/test_freemium_models.py::TestAssessmentLead::test_assessment_lead_score_update", "type": "Function", "lineno": 86}]}, {"nodeid": "tests/database/test_freemium_models.py::TestFreemiumAssessmentSession", "outcome": "passed", "result": [{"nodeid": "tests/database/test_freemium_models.py::TestFreemiumAssessmentSession::test_create_assessment_session", "type": "Function", "lineno": 109}, {"nodeid": "tests/database/test_freemium_models.py::TestFreemiumAssessmentSession::test_assessment_session_ai_responses_storage", "type": "Function", "lineno": 136}, {"nodeid": "tests/database/test_freemium_models.py::TestFreemiumAssessmentSession::test_assessment_session_expiration", "type": "Function", "lineno": 168}]}, {"nodeid": "tests/database/test_freemium_models.py::TestAIQuestionBank", "outcome": "passed", "result": [{"nodeid": "tests/database/test_freemium_models.py::TestAIQuestionBank::test_create_ai_question", "type": "Function", "lineno": 195}, {"nodeid": "tests/database/test_freemium_models.py::TestAIQuestionBank::test_ai_question_weighting_and_difficulty", "type": "Function", "lineno": 215}]}, {"nodeid": "tests/database/test_freemium_models.py::TestLeadScoringEvent", "outcome": "passed", "result": [{"nodeid": "tests/database/test_freemium_models.py::TestLeadScoringEvent::test_create_lead_scoring_event", "type": "Function", "lineno": 236}, {"nodeid": "tests/database/test_freemium_models.py::TestLeadScoringEvent::test_lead_scoring_with_metadata", "type": "Function", "lineno": 260}]}, {"nodeid": "tests/database/test_freemium_models.py::TestConversionEvent", "outcome": "passed", "result": [{"nodeid": "tests/database/test_freemium_models.py::TestConversionEvent::test_create_conversion_event", "type": "Function", "lineno": 292}]}, {"nodeid": "tests/database/test_freemium_models.py::TestFreemiumModelRelationships", "outcome": "passed", "result": [{"nodeid": "tests/database/test_freemium_models.py::TestFreemiumModelRelationships::test_lead_to_sessions_relationship", "type": "Function", "lineno": 326}, {"nodeid": "tests/database/test_freemium_models.py::TestFreemiumModelRelationships::test_cascade_delete_behavior", "type": "Function", "lineno": 345}]}, {"nodeid": "tests/database/test_freemium_models.py", "outcome": "passed", "result": [{"nodeid": "tests/database/test_freemium_models.py::TestAssessmentLead", "type": "Class"}, {"nodeid": "tests/database/test_freemium_models.py::TestFreemiumAssessmentSession", "type": "Class"}, {"nodeid": "tests/database/test_freemium_models.py::TestAIQuestionBank", "type": "Class"}, {"nodeid": "tests/database/test_freemium_models.py::TestLeadScoringEvent", "type": "Class"}, {"nodeid": "tests/database/test_freemium_models.py::TestConversionEvent", "type": "Class"}, {"nodeid": "tests/database/test_freemium_models.py::TestFreemiumModelRelationships", "type": "Class"}]}, {"nodeid": "tests/database", "outcome": "passed", "result": [{"nodeid": "tests/database/test_freemium_models.py", "type": "Module"}]}, {"nodeid": "tests/e2e/test_user_onboarding_flow.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/e2e/test_user_onboarding_flow.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/e2e/test_user_onboarding_flow.py:12: in <module>\n    from tests.conftest import assert_api_response_security\nE   ImportError: cannot import name 'assert_api_response_security' from 'tests.conftest' (/home/omar/Documents/ruleIQ/tests/conftest.py)"}, {"nodeid": "tests/e2e", "outcome": "passed", "result": [{"nodeid": "tests/e2e/test_user_onboarding_flow.py", "type": "Module"}]}, {"nodeid": "tests/fixtures", "outcome": "passed", "result": []}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints", "outcome": "passed", "result": [{"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints::test_ai_help_endpoint_success", "type": "Function", "lineno": 27}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints::test_ai_help_endpoint_authentication_required", "type": "Function", "lineno": 66}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints::test_ai_help_endpoint_invalid_framework", "type": "Function", "lineno": 81}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints::test_followup_questions_endpoint_success", "type": "Function", "lineno": 104}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints::test_analysis_endpoint_success", "type": "Function", "lineno": 149}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints::test_recommendations_endpoint_success", "type": "Function", "lineno": 177}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints::test_feedback_endpoint_success", "type": "Function", "lineno": 200}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints::test_metrics_endpoint_success", "type": "Function", "lineno": 220}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints::test_ai_service_timeout_handling", "type": "Function", "lineno": 233}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints::test_ai_quota_exceeded_handling", "type": "Function", "lineno": 251}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints::test_ai_content_filter_handling", "type": "Function", "lineno": 269}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints::test_invalid_request_data_validation", "type": "Function", "lineno": 290}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints::test_business_profile_not_found", "type": "Function", "lineno": 304}]}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIRateLimiting", "outcome": "passed", "result": [{"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIRateLimiting::test_ai_help_rate_limiting", "type": "Function", "lineno": 326}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIRateLimiting::test_ai_analysis_rate_limiting", "type": "Function", "lineno": 371}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIRateLimiting::test_regular_endpoints_higher_rate_limit", "type": "Function", "lineno": 403}]}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIErrorHandling", "outcome": "passed", "result": [{"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIErrorHandling::test_ai_service_unavailable", "type": "Function", "lineno": 426}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIErrorHandling::test_malformed_ai_response_handling", "type": "Function", "lineno": 449}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIErrorHandling::test_ai_response_validation_errors", "type": "Function", "lineno": 468}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIErrorHandling::test_concurrent_ai_requests_handling", "type": "Function", "lineno": 495}]}, {"nodeid": "tests/integration/api/test_ai_assessments.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIAssessmentEndpoints", "type": "Class"}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIRateLimiting", "type": "Class"}, {"nodeid": "tests/integration/api/test_ai_assessments.py::TestAIErrorHandling", "type": "Class"}]}, {"nodeid": "tests/integration/api/test_analytics_endpoints.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/integration/api/test_analytics_endpoints.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/integration/api/test_analytics_endpoints.py:12: in <module>\n    from tests.conftest import assert_api_response_security\nE   ImportError: cannot import name 'assert_api_response_security' from 'tests.conftest' (/home/omar/Documents/ruleIQ/tests/conftest.py)"}, {"nodeid": "tests/integration/api/test_chat_endpoints.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/integration/api/test_chat_endpoints.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/integration/api/test_chat_endpoints.py:13: in <module>\n    from tests.conftest import assert_api_response_security\nE   ImportError: cannot import name 'assert_api_response_security' from 'tests.conftest' (/home/omar/Documents/ruleIQ/tests/conftest.py)"}, {"nodeid": "tests/integration/api/test_enhanced_chat_endpoints.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/integration/api/test_enhanced_chat_endpoints.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/integration/api/test_enhanced_chat_endpoints.py:12: in <module>\n    from tests.conftest import assert_api_response_security\nE   ImportError: cannot import name 'assert_api_response_security' from 'tests.conftest' (/home/omar/Documents/ruleIQ/tests/conftest.py)"}, {"nodeid": "tests/integration/api/test_evidence_classification.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/integration/api/test_evidence_classification.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/integration/api/test_evidence_classification.py:13: in <module>\n    from tests.conftest import assert_api_response_security\nE   ImportError: cannot import name 'assert_api_response_security' from 'tests.conftest' (/home/omar/Documents/ruleIQ/tests/conftest.py)"}, {"nodeid": "tests/integration/api/test_evidence_endpoints.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/integration/api/test_evidence_endpoints.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/integration/api/test_evidence_endpoints.py:13: in <module>\n    from tests.conftest import assert_api_response_security\nE   ImportError: cannot import name 'assert_api_response_security' from 'tests.conftest' (/home/omar/Documents/ruleIQ/tests/conftest.py)"}, {"nodeid": "tests/integration/api/test_freemium_endpoints.py", "outcome": "failed", "result": [], "longrepr": "tests/integration/api/test_freemium_endpoints.py:25: in <module>\n    from api.main import app\napi/main.py:21: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/integration/api/test_iq_agent_endpoints.py", "outcome": "failed", "result": [], "longrepr": "tests/integration/api/test_iq_agent_endpoints.py:21: in <module>\n    from main import app\nmain.py:11: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/integration/api/test_quality_analysis.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/integration/api/test_quality_analysis.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/integration/api/test_quality_analysis.py:13: in <module>\n    from tests.conftest import assert_api_response_security\nE   ImportError: cannot import name 'assert_api_response_security' from 'tests.conftest' (/home/omar/Documents/ruleIQ/tests/conftest.py)"}, {"nodeid": "tests/integration/api", "outcome": "passed", "result": [{"nodeid": "tests/integration/api/test_ai_assessments.py", "type": "Module"}, {"nodeid": "tests/integration/api/test_analytics_endpoints.py", "type": "Module"}, {"nodeid": "tests/integration/api/test_chat_endpoints.py", "type": "Module"}, {"nodeid": "tests/integration/api/test_enhanced_chat_endpoints.py", "type": "Module"}, {"nodeid": "tests/integration/api/test_evidence_classification.py", "type": "Module"}, {"nodeid": "tests/integration/api/test_evidence_endpoints.py", "type": "Module"}, {"nodeid": "tests/integration/api/test_freemium_endpoints.py", "type": "Module"}, {"nodeid": "tests/integration/api/test_iq_agent_endpoints.py", "type": "Module"}, {"nodeid": "tests/integration/api/test_quality_analysis.py", "type": "Module"}]}, {"nodeid": "tests/integration/database", "outcome": "passed", "result": []}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_ai_service_timeout_fallback", "type": "Function", "lineno": 29}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_ai_quota_exceeded_fallback", "type": "Function", "lineno": 54}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_ai_content_filter_handling", "type": "Function", "lineno": 75}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_ai_model_error_fallback", "type": "Function", "lineno": 98}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_ai_parsing_error_handling", "type": "Function", "lineno": 119}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_network_error_fallback", "type": "Function", "lineno": 144}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_multiple_ai_service_failures", "type": "Function", "lineno": 163}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_partial_ai_service_degradation", "type": "Function", "lineno": 217}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_ai_service_recovery_after_failure", "type": "Function", "lineno": 264}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_ai_error_logging_and_monitoring", "type": "Function", "lineno": 297}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_ai_fallback_to_mock_data", "type": "Function", "lineno": 322}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_ai_error_context_preservation", "type": "Function", "lineno": 356}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_ai_circuit_breaker_pattern", "type": "Function", "lineno": 385}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_ai_service_graceful_shutdown", "type": "Coroutine", "lineno": 416}, {"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling::test_ai_error_rate_monitoring", "type": "Function", "lineno": 435}]}, {"nodeid": "tests/integration/test_ai_error_handling.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_ai_error_handling.py::TestAIErrorHandling", "type": "Class"}]}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestClient", "outcome": "passed", "result": []}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_streaming_analysis_endpoint", "type": "Coroutine", "lineno": 43}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_streaming_recommendations_endpoint", "type": "Coroutine", "lineno": 80}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_streaming_help_endpoint", "type": "Coroutine", "lineno": 118}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_circuit_breaker_status_endpoint", "type": "Function", "lineno": 151}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_model_selection_endpoint", "type": "Function", "lineno": 178}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_streaming_with_circuit_breaker_open", "type": "Coroutine", "lineno": 203}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_model_fallback_chain", "type": "Function", "lineno": 241}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_streaming_error_handling", "type": "Coroutine", "lineno": 263}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_performance_metrics_endpoint", "type": "Function", "lineno": 291}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_concurrent_streaming_requests", "type": "Coroutine", "lineno": 309}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_model_health_check_endpoint", "type": "Function", "lineno": 345}]}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestClient", "type": "Class"}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints", "type": "Class"}]}, {"nodeid": "tests/integration/test_cached_content_api.py::TestCachedContentAPI", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_cached_content_api.py::TestCachedContentAPI::test_cache_metrics_endpoint_success", "type": "Function", "lineno": 14}, {"nodeid": "tests/integration/test_cached_content_api.py::TestCachedContentAPI::test_cache_metrics_endpoint_authentication_required", "type": "Function", "lineno": 35}, {"nodeid": "tests/integration/test_cached_content_api.py::TestCachedContentAPI::test_cache_metrics_includes_performance_data", "type": "Function", "lineno": 40}, {"nodeid": "tests/integration/test_cached_content_api.py::TestCachedContentAPI::test_cache_metrics_with_ai_activity", "type": "Function", "lineno": 63}]}, {"nodeid": "tests/integration/test_cached_content_api.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_cached_content_api.py::TestCachedContentAPI", "type": "Class"}]}, {"nodeid": "tests/integration/test_comprehensive_api_workflows.py", "outcome": "failed", "result": [], "longrepr": "tests/integration/test_comprehensive_api_workflows.py:24: in <module>\n    from api.main import app\napi/main.py:21: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/integration/test_contract_validation.py", "outcome": "failed", "result": [], "longrepr": "tests/integration/test_contract_validation.py:21: in <module>\n    from api.main import app\napi/main.py:21: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/integration/test_evidence_flow.py::TestEvidenceCollectionFlow", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_evidence_flow.py::TestEvidenceCollectionFlow::test_full_evidence_and_reporting_flow", "type": "Function", "lineno": 72}, {"nodeid": "tests/integration/test_evidence_flow.py::TestEvidenceCollectionFlow::test_ai_assistant_evidence_query", "type": "Function", "lineno": 152}, {"nodeid": "tests/integration/test_evidence_flow.py::TestEvidenceCollectionFlow::test_scheduled_report_generation", "type": "Function", "lineno": 178}]}, {"nodeid": "tests/integration/test_evidence_flow.py::TestAPIEndpointsIntegration", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_evidence_flow.py::TestAPIEndpointsIntegration::test_business_profile_to_evidence_workflow", "type": "Function", "lineno": 216}, {"nodeid": "tests/integration/test_evidence_flow.py::TestAPIEndpointsIntegration::test_framework_to_readiness_assessment", "type": "Function", "lineno": 252}]}, {"nodeid": "tests/integration/test_evidence_flow.py::TestErrorHandlingAndResilience", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_evidence_flow.py::TestErrorHandlingAndResilience::test_integration_failure_handling", "type": "Function", "lineno": 279}, {"nodeid": "tests/integration/test_evidence_flow.py::TestErrorHandlingAndResilience::test_report_generation_with_no_data", "type": "Function", "lineno": 294}]}, {"nodeid": "tests/integration/test_evidence_flow.py::TestAsyncOperations", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_evidence_flow.py::TestAsyncOperations::test_async_evidence_collection", "type": "Coroutine", "lineno": 320}, {"nodeid": "tests/integration/test_evidence_flow.py::TestAsyncOperations::test_ai_assistant_async_processing", "type": "Coroutine", "lineno": 332}]}, {"nodeid": "tests/integration/test_evidence_flow.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_evidence_flow.py::TestEvidenceCollectionFlow", "type": "Class"}, {"nodeid": "tests/integration/test_evidence_flow.py::TestAPIEndpointsIntegration", "type": "Class"}, {"nodeid": "tests/integration/test_evidence_flow.py::TestErrorHandlingAndResilience", "type": "Class"}, {"nodeid": "tests/integration/test_evidence_flow.py::TestAsyncOperations", "type": "Class"}]}, {"nodeid": "tests/integration/test_external_service_integration.py", "outcome": "failed", "result": [], "longrepr": "tests/integration/test_external_service_integration.py:27: in <module>\n    from api.main import app\napi/main.py:21: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/integration/test_jwt_auth_integration.py", "outcome": "failed", "result": [], "longrepr": "tests/integration/test_jwt_auth_integration.py:11: in <module>\n    from main import app\nmain.py:11: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/integration/test_state_integration.py::TestStateWithLangGraph", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_state_integration.py::TestStateWithLangGraph::test_state_as_graph_state", "type": "Coroutine", "lineno": 129}, {"nodeid": "tests/integration/test_state_integration.py::TestStateWithLangGraph::test_state_with_conditional_edges", "type": "Coroutine", "lineno": 174}, {"nodeid": "tests/integration/test_state_integration.py::TestStateWithLangGraph::test_parallel_node_execution", "type": "Coroutine", "lineno": 248}]}, {"nodeid": "tests/integration/test_state_integration.py::TestReducerIntegration", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_state_integration.py::TestReducerIntegration::test_evidence_accumulation_reducer", "type": "Function", "lineno": 320}, {"nodeid": "tests/integration/test_state_integration.py::TestReducerIntegration::test_decision_merge_reducer", "type": "Function", "lineno": 345}, {"nodeid": "tests/integration/test_state_integration.py::TestReducerIntegration::test_cost_tracker_reducer", "type": "Function", "lineno": 377}, {"nodeid": "tests/integration/test_state_integration.py::TestReducerIntegration::test_memory_append_reducer", "type": "Function", "lineno": 410}]}, {"nodeid": "tests/integration/test_state_integration.py::TestStateWithPostgreSQL", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_state_integration.py::TestStateWithPostgreSQL::test_state_checkpointing", "type": "Function", "lineno": 446}, {"nodeid": "tests/integration/test_state_integration.py::TestStateWithPostgreSQL::test_state_recovery", "type": "Function", "lineno": 495}]}, {"nodeid": "tests/integration/test_state_integration.py::TestComplexWorkflow", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_state_integration.py::TestComplexWorkflow::test_full_compliance_workflow", "type": "Coroutine", "lineno": 546}]}, {"nodeid": "tests/integration/test_state_integration.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_state_integration.py::TestStateWithLangGraph", "type": "Class"}, {"nodeid": "tests/integration/test_state_integration.py::TestReducerIntegration", "type": "Class"}, {"nodeid": "tests/integration/test_state_integration.py::TestStateWithPostgreSQL", "type": "Class"}, {"nodeid": "tests/integration/test_state_integration.py::TestComplexWorkflow", "type": "Class"}]}, {"nodeid": "tests/integration/workers", "outcome": "passed", "result": []}, {"nodeid": "tests/integration", "outcome": "passed", "result": [{"nodeid": "tests/integration/api", "type": "Package"}, {"nodeid": "tests/integration/database", "type": "Package"}, {"nodeid": "tests/integration/test_ai_error_handling.py", "type": "Module"}, {"nodeid": "tests/integration/test_ai_optimization_endpoints.py", "type": "Module"}, {"nodeid": "tests/integration/test_cached_content_api.py", "type": "Module"}, {"nodeid": "tests/integration/test_comprehensive_api_workflows.py", "type": "Module"}, {"nodeid": "tests/integration/test_contract_validation.py", "type": "Module"}, {"nodeid": "tests/integration/test_evidence_flow.py", "type": "Module"}, {"nodeid": "tests/integration/test_external_service_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_jwt_auth_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_state_integration.py", "type": "Module"}, {"nodeid": "tests/integration/workers", "type": "Package"}]}, {"nodeid": "tests/load", "outcome": "passed", "result": []}, {"nodeid": "tests/mocks", "outcome": "passed", "result": []}, {"nodeid": "tests/models/test_compliance_state.py::TestComplianceStateInitialization", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestComplianceStateInitialization::test_minimal_state_creation", "type": "Function", "lineno": 30}, {"nodeid": "tests/models/test_compliance_state.py::TestComplianceStateInitialization::test_full_state_creation", "type": "Function", "lineno": 51}]}, {"nodeid": "tests/models/test_compliance_state.py::TestActorValidation", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestActorValidation::test_valid_actor_types", "type": "Function", "lineno": 93}, {"nodeid": "tests/models/test_compliance_state.py::TestActorValidation::test_invalid_actor_type_raises_error", "type": "Function", "lineno": 113}, {"nodeid": "tests/models/test_compliance_state.py::TestActorValidation::test_actor_type_case_sensitive", "type": "Function", "lineno": 128}]}, {"nodeid": "tests/models/test_compliance_state.py::TestEvidenceAccumulation", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestEvidenceAccumulation::test_evidence_initialization_empty", "type": "Function", "lineno": 146}, {"nodeid": "tests/models/test_compliance_state.py::TestEvidenceAccumulation::test_evidence_accumulation_preserves_existing", "type": "Function", "lineno": 159}, {"nodeid": "tests/models/test_compliance_state.py::TestEvidenceAccumulation::test_evidence_item_validation", "type": "Function", "lineno": 187}]}, {"nodeid": "tests/models/test_compliance_state.py::TestCostTracking", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestCostTracking::test_cost_tracker_initialization", "type": "Function", "lineno": 210}, {"nodeid": "tests/models/test_compliance_state.py::TestCostTracking::test_cost_tracker_update", "type": "Function", "lineno": 225}, {"nodeid": "tests/models/test_compliance_state.py::TestCostTracking::test_cost_accumulation", "type": "Function", "lineno": 247}]}, {"nodeid": "tests/models/test_compliance_state.py::TestMemoryPersistence", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestMemoryPersistence::test_memory_initialization", "type": "Function", "lineno": 279}, {"nodeid": "tests/models/test_compliance_state.py::TestMemoryPersistence::test_episodic_memory_append", "type": "Function", "lineno": 300}, {"nodeid": "tests/models/test_compliance_state.py::TestMemoryPersistence::test_semantic_memory_update", "type": "Function", "lineno": 319}]}, {"nodeid": "tests/models/test_compliance_state.py::TestDecisionTracking", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestDecisionTracking::test_decisions_initialization", "type": "Function", "lineno": 343}, {"nodeid": "tests/models/test_compliance_state.py::TestDecisionTracking::test_decision_structure", "type": "Function", "lineno": 356}, {"nodeid": "tests/models/test_compliance_state.py::TestDecisionTracking::test_decision_accumulation", "type": "Function", "lineno": 381}]}, {"nodeid": "tests/models/test_compliance_state.py::TestStateSerialization", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestStateSerialization::test_state_to_json", "type": "Function", "lineno": 416}, {"nodeid": "tests/models/test_compliance_state.py::TestStateSerialization::test_state_from_json", "type": "Function", "lineno": 434}, {"nodeid": "tests/models/test_compliance_state.py::TestStateSerialization::test_datetime_serialization", "type": "Function", "lineno": 464}]}, {"nodeid": "tests/models/test_compliance_state.py::TestTraceIdGeneration", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestTraceIdGeneration::test_trace_id_required", "type": "Function", "lineno": 486}, {"nodeid": "tests/models/test_compliance_state.py::TestTraceIdGeneration::test_trace_id_format_validation", "type": "Function", "lineno": 500}, {"nodeid": "tests/models/test_compliance_state.py::TestTraceIdGeneration::test_trace_id_uniqueness", "type": "Function", "lineno": 514}]}, {"nodeid": "tests/models/test_compliance_state.py::TestContextValidation", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestContextValidation::test_context_structure", "type": "Function", "lineno": 541}, {"nodeid": "tests/models/test_compliance_state.py::TestContextValidation::test_context_optional", "type": "Function", "lineno": 571}, {"nodeid": "tests/models/test_compliance_state.py::TestContextValidation::test_context_framework_validation", "type": "Function", "lineno": 583}]}, {"nodeid": "tests/models/test_compliance_state.py::TestStateTransitions", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestStateTransitions::test_workflow_status_values", "type": "Function", "lineno": 604}, {"nodeid": "tests/models/test_compliance_state.py::TestStateTransitions::test_invalid_workflow_status", "type": "Function", "lineno": 626}, {"nodeid": "tests/models/test_compliance_state.py::TestStateTransitions::test_state_transition_tracking", "type": "Function", "lineno": 641}]}, {"nodeid": "tests/models/test_compliance_state.py::TestPerformanceMetrics", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestPerformanceMetrics::test_node_execution_times", "type": "Function", "lineno": 670}, {"nodeid": "tests/models/test_compliance_state.py::TestPerformanceMetrics::test_retry_and_error_counts", "type": "Function", "lineno": 690}, {"nodeid": "tests/models/test_compliance_state.py::TestPerformanceMetrics::test_counter_defaults", "type": "Function", "lineno": 705}]}, {"nodeid": "tests/models/test_compliance_state.py::TestStateValidation", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestStateValidation::test_case_id_required", "type": "Function", "lineno": 722}, {"nodeid": "tests/models/test_compliance_state.py::TestStateValidation::test_objective_required", "type": "Function", "lineno": 735}, {"nodeid": "tests/models/test_compliance_state.py::TestStateValidation::test_empty_strings_validation", "type": "Function", "lineno": 748}, {"nodeid": "tests/models/test_compliance_state.py::TestStateValidation::test_type_coercion", "type": "Function", "lineno": 762}]}, {"nodeid": "tests/models/test_compliance_state.py::TestLangGraphIntegration", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestLangGraphIntegration::test_state_with_langgraph_typeddict", "type": "Function", "lineno": 782}, {"nodeid": "tests/models/test_compliance_state.py::TestLangGraphIntegration::test_state_reducer_functions", "type": "Function", "lineno": 812}]}, {"nodeid": "tests/models/test_compliance_state.py", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py::TestComplianceStateInitialization", "type": "Class"}, {"nodeid": "tests/models/test_compliance_state.py::TestActorValidation", "type": "Class"}, {"nodeid": "tests/models/test_compliance_state.py::TestEvidenceAccumulation", "type": "Class"}, {"nodeid": "tests/models/test_compliance_state.py::TestCostTracking", "type": "Class"}, {"nodeid": "tests/models/test_compliance_state.py::TestMemoryPersistence", "type": "Class"}, {"nodeid": "tests/models/test_compliance_state.py::TestDecisionTracking", "type": "Class"}, {"nodeid": "tests/models/test_compliance_state.py::TestStateSerialization", "type": "Class"}, {"nodeid": "tests/models/test_compliance_state.py::TestTraceIdGeneration", "type": "Class"}, {"nodeid": "tests/models/test_compliance_state.py::TestContextValidation", "type": "Class"}, {"nodeid": "tests/models/test_compliance_state.py::TestStateTransitions", "type": "Class"}, {"nodeid": "tests/models/test_compliance_state.py::TestPerformanceMetrics", "type": "Class"}, {"nodeid": "tests/models/test_compliance_state.py::TestStateValidation", "type": "Class"}, {"nodeid": "tests/models/test_compliance_state.py::TestLangGraphIntegration", "type": "Class"}]}, {"nodeid": "tests/models", "outcome": "passed", "result": [{"nodeid": "tests/models/test_compliance_state.py", "type": "Module"}]}, {"nodeid": "tests/monitoring/test_metrics.py::TestMetricsCollector", "outcome": "passed", "result": []}, {"nodeid": "tests/monitoring/test_metrics.py::TestObservability", "outcome": "passed", "result": [{"nodeid": "tests/monitoring/test_metrics.py::TestObservability::test_metrics_collection_functionality", "type": "Function", "lineno": 209}, {"nodeid": "tests/monitoring/test_metrics.py::TestObservability::test_test_statistics_calculation", "type": "Function", "lineno": 238}, {"nodeid": "tests/monitoring/test_metrics.py::TestObservability::test_resource_monitoring_during_test", "type": "Function", "lineno": 270}, {"nodeid": "tests/monitoring/test_metrics.py::TestObservability::test_performance_metric_tracking", "type": "Function", "lineno": 293}, {"nodeid": "tests/monitoring/test_metrics.py::TestObservability::test_error_rate_tracking", "type": "Function", "lineno": 322}, {"nodeid": "tests/monitoring/test_metrics.py::TestObservability::test_test_duration_trends", "type": "Function", "lineno": 338}]}, {"nodeid": "tests/monitoring/test_metrics.py::TestMetricsReporting", "outcome": "passed", "result": [{"nodeid": "tests/monitoring/test_metrics.py::TestMetricsReporting::test_generate_test_report", "type": "Function", "lineno": 367}, {"nodeid": "tests/monitoring/test_metrics.py::TestMetricsReporting::test_metrics_export_format", "type": "Function", "lineno": 392}, {"nodeid": "tests/monitoring/test_metrics.py::TestMetricsReporting::test_performance_threshold_detection", "type": "Function", "lineno": 418}, {"nodeid": "tests/monitoring/test_metrics.py::TestMetricsReporting::test_trend_analysis", "type": "Function", "lineno": 460}]}, {"nodeid": "tests/monitoring/test_metrics.py::TestCoverageTracking", "outcome": "passed", "result": [{"nodeid": "tests/monitoring/test_metrics.py::TestCoverageTracking::test_coverage_metric_structure", "type": "Function", "lineno": 502}, {"nodeid": "tests/monitoring/test_metrics.py::TestCoverageTracking::test_coverage_trend_tracking", "type": "Function", "lineno": 534}, {"nodeid": "tests/monitoring/test_metrics.py::TestCoverageTracking::test_coverage_threshold_compliance", "type": "Function", "lineno": 563}]}, {"nodeid": "tests/monitoring/test_metrics.py", "outcome": "passed", "result": [{"nodeid": "tests/monitoring/test_metrics.py::TestMetricsCollector", "type": "Class"}, {"nodeid": "tests/monitoring/test_metrics.py::TestObservability", "type": "Class"}, {"nodeid": "tests/monitoring/test_metrics.py::TestMetricsReporting", "type": "Class"}, {"nodeid": "tests/monitoring/test_metrics.py::TestCoverageTracking", "type": "Class"}]}, {"nodeid": "tests/monitoring", "outcome": "passed", "result": [{"nodeid": "tests/monitoring/test_metrics.py", "type": "Module"}]}, {"nodeid": "tests/performance/test_ai_optimization_performance.py::TestAIOptimizationPerformance", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_ai_optimization_performance.py::TestAIOptimizationPerformance::test_model_selection_performance", "type": "Coroutine", "lineno": 44}, {"nodeid": "tests/performance/test_ai_optimization_performance.py::TestAIOptimizationPerformance::test_circuit_breaker_performance", "type": "Coroutine", "lineno": 68}, {"nodeid": "tests/performance/test_ai_optimization_performance.py::TestAIOptimizationPerformance::test_streaming_performance", "type": "Coroutine", "lineno": 85}, {"nodeid": "tests/performance/test_ai_optimization_performance.py::TestAIOptimizationPerformance::test_concurrent_streaming_performance", "type": "Coroutine", "lineno": 118}, {"nodeid": "tests/performance/test_ai_optimization_performance.py::TestAIOptimizationPerformance::test_model_fallback_performance", "type": "Coroutine", "lineno": 174}, {"nodeid": "tests/performance/test_ai_optimization_performance.py::TestAIOptimizationPerformance::test_memory_usage_streaming", "type": "Coroutine", "lineno": 204}, {"nodeid": "tests/performance/test_ai_optimization_performance.py::TestAIOptimizationPerformance::test_circuit_breaker_overhead", "type": "Function", "lineno": 247}, {"nodeid": "tests/performance/test_ai_optimization_performance.py::TestAIOptimizationPerformance::test_cost_optimization_simulation", "type": "Coroutine", "lineno": 276}, {"nodeid": "tests/performance/test_ai_optimization_performance.py::TestAIOptimizationPerformance::test_end_to_end_performance", "type": "Coroutine", "lineno": 318}]}, {"nodeid": "tests/performance/test_ai_optimization_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_ai_optimization_performance.py::TestAIOptimizationPerformance", "type": "Class"}]}, {"nodeid": "tests/performance/test_ai_performance.py::TestAIPerformance", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_ai_performance.py::TestAIPerformance::test_ai_help_response_time_under_threshold", "type": "Function", "lineno": 25}, {"nodeid": "tests/performance/test_ai_performance.py::TestAIPerformance::test_ai_help_concurrent_requests_performance", "type": "Function", "lineno": 63}, {"nodeid": "tests/performance/test_ai_performance.py::TestAIPerformance::test_ai_analysis_performance_with_large_dataset", "type": "Function", "lineno": 111}, {"nodeid": "tests/performance/test_ai_performance.py::TestAIPerformance::test_ai_service_timeout_handling", "type": "Coroutine", "lineno": 139}, {"nodeid": "tests/performance/test_ai_performance.py::TestAIPerformance::test_ai_caching_improves_performance", "type": "Function", "lineno": 164}]}, {"nodeid": "tests/performance/test_ai_performance.py::TestAIRateLimiting", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_ai_performance.py::TestAIRateLimiting::test_ai_help_rate_limit_enforcement", "type": "Function", "lineno": 215}, {"nodeid": "tests/performance/test_ai_performance.py::TestAIRateLimiting::test_ai_analysis_stricter_rate_limit", "type": "Function", "lineno": 267}, {"nodeid": "tests/performance/test_ai_performance.py::TestAIRateLimiting::test_regular_endpoints_higher_rate_limits", "type": "Function", "lineno": 295}, {"nodeid": "tests/performance/test_ai_performance.py::TestAIRateLimiting::test_rate_limit_headers_present", "type": "Function", "lineno": 314}, {"nodeid": "tests/performance/test_ai_performance.py::TestAIRateLimiting::test_rate_limit_reset_after_window", "type": "Function", "lineno": 351}]}, {"nodeid": "tests/performance/test_ai_performance.py::TestAILoadTesting", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_ai_performance.py::TestAILoadTesting::test_ai_endpoint_load_capacity", "type": "Function", "lineno": 404}, {"nodeid": "tests/performance/test_ai_performance.py::TestAILoadTesting::test_ai_memory_usage_under_load", "type": "Function", "lineno": 463}]}, {"nodeid": "tests/performance/test_ai_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_ai_performance.py::TestAIPerformance", "type": "Class"}, {"nodeid": "tests/performance/test_ai_performance.py::TestAIRateLimiting", "type": "Class"}, {"nodeid": "tests/performance/test_ai_performance.py::TestAILoadTesting", "type": "Class"}]}, {"nodeid": "tests/performance/test_api_performance.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/performance/test_api_performance.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/performance/test_api_performance.py:14: in <module>\n    from pytest_benchmark.fixture import BenchmarkFixture\nE   ModuleNotFoundError: No module named 'pytest_benchmark'"}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseQueryPerformance", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_database_performance.py::TestDatabaseQueryPerformance::test_evidence_query_scaling", "type": "Function", "lineno": 22}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseQueryPerformance::test_full_text_search_performance", "type": "Function", "lineno": 75}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseQueryPerformance::test_aggregation_query_performance", "type": "Function", "lineno": 126}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseQueryPerformance::test_join_query_performance", "type": "Function", "lineno": 201}]}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseConnectionPerformance", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_database_performance.py::TestDatabaseConnectionPerformance::test_connection_pool_performance", "type": "Function", "lineno": 263}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseConnectionPerformance::test_transaction_performance", "type": "Function", "lineno": 338}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseConnectionPerformance::test_bulk_operation_performance", "type": "Function", "lineno": 395}]}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseIndexPerformance", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_database_performance.py::TestDatabaseIndexPerformance::test_indexed_query_performance", "type": "Function", "lineno": 466}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseIndexPerformance::test_unindexed_query_performance", "type": "Function", "lineno": 539}]}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseConcurrencyPerformance", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_database_performance.py::TestDatabaseConcurrencyPerformance::test_concurrent_read_performance", "type": "Function", "lineno": 609}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseConcurrencyPerformance::test_concurrent_write_performance", "type": "Function", "lineno": 690}]}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseResourceUsage", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_database_performance.py::TestDatabaseResourceUsage::test_memory_usage_optimization", "type": "Function", "lineno": 789}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseResourceUsage::test_connection_cleanup", "type": "Function", "lineno": 849}]}, {"nodeid": "tests/performance/test_database_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_database_performance.py::TestDatabaseQueryPerformance", "type": "Class"}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseConnectionPerformance", "type": "Class"}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseIndexPerformance", "type": "Class"}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseConcurrencyPerformance", "type": "Class"}, {"nodeid": "tests/performance/test_database_performance.py::TestDatabaseResourceUsage", "type": "Class"}]}, {"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes::test_query_optimizer_initialization", "type": "Function", "lineno": 20}, {"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes::test_n1_query_prevention", "type": "Function", "lineno": 27}, {"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes::test_database_indexes_migration", "type": "Function", "lineno": 37}, {"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes::test_caching_implementation", "type": "Function", "lineno": 61}, {"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes::test_batch_operations", "type": "Function", "lineno": 70}, {"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes::test_memory_leak_prevention", "type": "Function", "lineno": 78}, {"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes::test_query_performance_monitoring", "type": "Function", "lineno": 86}, {"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes::test_connection_pooling", "type": "Function", "lineno": 94}, {"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes::test_slow_query_detection", "type": "Function", "lineno": 103}, {"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes::test_query_optimization_strategies[select_related-JOIN]", "type": "Function", "lineno": 111}, {"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes::test_query_optimization_strategies[prefetch_related-IN]", "type": "Function", "lineno": 111}, {"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes::test_query_optimization_strategies[batch_select-BATCH]", "type": "Function", "lineno": 111}]}, {"nodeid": "tests/performance/test_performance_fixes.py::TestDatabaseIndexes", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_performance_fixes.py::TestDatabaseIndexes::test_index_coverage", "type": "Function", "lineno": 131}, {"nodeid": "tests/performance/test_performance_fixes.py::TestDatabaseIndexes::test_composite_indexes", "type": "Function", "lineno": 151}, {"nodeid": "tests/performance/test_performance_fixes.py::TestDatabaseIndexes::test_index_performance_impact", "type": "Function", "lineno": 169}]}, {"nodeid": "tests/performance/test_performance_fixes.py", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_performance_fixes.py::TestPerformanceFixes", "type": "Class"}, {"nodeid": "tests/performance/test_performance_fixes.py::TestDatabaseIndexes", "type": "Class"}]}, {"nodeid": "tests/performance", "outcome": "passed", "result": [{"nodeid": "tests/performance/test_ai_optimization_performance.py", "type": "Module"}, {"nodeid": "tests/performance/test_ai_performance.py", "type": "Module"}, {"nodeid": "tests/performance/test_api_performance.py", "type": "Module"}, {"nodeid": "tests/performance/test_database_performance.py", "type": "Module"}, {"nodeid": "tests/performance/test_performance_fixes.py", "type": "Module"}]}, {"nodeid": "tests/security/test_authentication.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/security/test_authentication.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/security/test_authentication.py:13: in <module>\n    from tests.conftest import assert_api_response_security\nE   ImportError: cannot import name 'assert_api_response_security' from 'tests.conftest' (/home/omar/Documents/ruleIQ/tests/conftest.py)"}, {"nodeid": "tests/security/test_security_fixes.py", "outcome": "failed", "result": [], "longrepr": "tests/security/test_security_fixes.py:15: in <module>\n    from api.main import app\napi/main.py:21: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/security", "outcome": "passed", "result": [{"nodeid": "tests/security/test_authentication.py", "type": "Module"}, {"nodeid": "tests/security/test_security_fixes.py", "type": "Module"}]}, {"nodeid": "tests/test-utility-scripts/debug_analytics_test.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test-utility-scripts/debug_single_analytics_test.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test-utility-scripts/debug_test.py", "outcome": "passed", "result": [{"nodeid": "tests/test-utility-scripts/debug_test.py::test_model_selection", "type": "Coroutine", "lineno": 10}]}, {"nodeid": "tests/test-utility-scripts/test_final_verification.py", "outcome": "passed", "result": [{"nodeid": "tests/test-utility-scripts/test_final_verification.py::test_database_connection", "type": "Function", "lineno": 6}, {"nodeid": "tests/test-utility-scripts/test_final_verification.py::test_user_creation", "type": "Function", "lineno": 13}, {"nodeid": "tests/test-utility-scripts/test_final_verification.py::test_business_profile", "type": "Function", "lineno": 27}, {"nodeid": "tests/test-utility-scripts/test_final_verification.py::test_authenticated_client", "type": "Function", "lineno": 34}, {"nodeid": "tests/test-utility-scripts/test_final_verification.py::test_evidence_service", "type": "Function", "lineno": 42}]}, {"nodeid": "tests/test-utility-scripts", "outcome": "passed", "result": [{"nodeid": "tests/test-utility-scripts/debug_analytics_test.py", "type": "Module"}, {"nodeid": "tests/test-utility-scripts/debug_single_analytics_test.py", "type": "Module"}, {"nodeid": "tests/test-utility-scripts/debug_test.py", "type": "Module"}, {"nodeid": "tests/test-utility-scripts/test_final_verification.py", "type": "Module"}]}, {"nodeid": "tests/test_agentic_rag.py", "outcome": "passed", "result": [{"nodeid": "tests/test_agentic_rag.py::test_agentic_rag", "type": "Coroutine", "lineno": 16}]}, {"nodeid": "tests/test_ai_assessment_endpoints_integration.py", "outcome": "failed", "result": [], "longrepr": "tests/test_ai_assessment_endpoints_integration.py:12: in <module>\n    from main import app\nmain.py:11: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/test_ai_authentication_fix.py", "outcome": "failed", "result": [], "longrepr": "tests/test_ai_authentication_fix.py:11: in <module>\n    from main import app\nmain.py:11: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/test_ai_cost_management.py::TestAIUsageMetrics", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_cost_management.py::TestAIUsageMetrics::test_metrics_initialization", "type": "Function", "lineno": 32}, {"nodeid": "tests/test_ai_cost_management.py::TestAIUsageMetrics::test_metrics_aggregation", "type": "Function", "lineno": 54}, {"nodeid": "tests/test_ai_cost_management.py::TestAIUsageMetrics::test_cost_per_token_calculation", "type": "Function", "lineno": 86}, {"nodeid": "tests/test_ai_cost_management.py::TestAIUsageMetrics::test_efficiency_score_calculation", "type": "Function", "lineno": 101}]}, {"nodeid": "tests/test_ai_cost_management.py::TestModelCostConfig", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_cost_management.py::TestModelCostConfig::test_gemini_cost_calculation", "type": "Function", "lineno": 124}, {"nodeid": "tests/test_ai_cost_management.py::TestModelCostConfig::test_openai_cost_calculation", "type": "Function", "lineno": 138}, {"nodeid": "tests/test_ai_cost_management.py::TestModelCostConfig::test_custom_model_config", "type": "Function", "lineno": 150}]}, {"nodeid": "tests/test_ai_cost_management.py::TestCostTrackingService", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_cost_management.py::TestCostTrackingService::test_track_usage", "type": "Coroutine", "lineno": 175}, {"nodeid": "tests/test_ai_cost_management.py::TestCostTrackingService::test_get_usage_by_service", "type": "Coroutine", "lineno": 197}, {"nodeid": "tests/test_ai_cost_management.py::TestCostTrackingService::test_get_usage_by_time_range", "type": "Coroutine", "lineno": 211}, {"nodeid": "tests/test_ai_cost_management.py::TestCostTrackingService::test_calculate_daily_costs", "type": "Coroutine", "lineno": 224}, {"nodeid": "tests/test_ai_cost_management.py::TestCostTrackingService::test_get_cost_trends", "type": "Coroutine", "lineno": 243}, {"nodeid": "tests/test_ai_cost_management.py::TestCostTrackingService::test_identify_cost_anomalies", "type": "Coroutine", "lineno": 261}]}, {"nodeid": "tests/test_ai_cost_management.py::TestBudgetAlertService", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_cost_management.py::TestBudgetAlertService::test_set_daily_budget", "type": "Coroutine", "lineno": 285}, {"nodeid": "tests/test_ai_cost_management.py::TestBudgetAlertService::test_budget_usage_tracking", "type": "Coroutine", "lineno": 293}, {"nodeid": "tests/test_ai_cost_management.py::TestBudgetAlertService::test_budget_exceeded_alert", "type": "Coroutine", "lineno": 313}, {"nodeid": "tests/test_ai_cost_management.py::TestBudgetAlertService::test_cost_spike_detection", "type": "Coroutine", "lineno": 332}, {"nodeid": "tests/test_ai_cost_management.py::TestBudgetAlertService::test_service_specific_budgets", "type": "Coroutine", "lineno": 345}]}, {"nodeid": "tests/test_ai_cost_management.py::TestCostOptimizationService", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_cost_management.py::TestCostOptimizationService::test_model_efficiency_analysis", "type": "Coroutine", "lineno": 374}, {"nodeid": "tests/test_ai_cost_management.py::TestCostOptimizationService::test_caching_optimization", "type": "Coroutine", "lineno": 408}, {"nodeid": "tests/test_ai_cost_management.py::TestCostOptimizationService::test_batch_processing_optimization", "type": "Coroutine", "lineno": 430}, {"nodeid": "tests/test_ai_cost_management.py::TestCostOptimizationService::test_prompt_optimization_analysis", "type": "Coroutine", "lineno": 443}, {"nodeid": "tests/test_ai_cost_management.py::TestCostOptimizationService::test_comprehensive_optimization_report", "type": "Coroutine", "lineno": 458}]}, {"nodeid": "tests/test_ai_cost_management.py::TestAICostManager", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_cost_management.py::TestAICostManager::test_track_api_call", "type": "Coroutine", "lineno": 485}, {"nodeid": "tests/test_ai_cost_management.py::TestAICostManager::test_daily_cost_summary", "type": "Coroutine", "lineno": 503}, {"nodeid": "tests/test_ai_cost_management.py::TestAICostManager::test_budget_monitoring_integration", "type": "Coroutine", "lineno": 526}, {"nodeid": "tests/test_ai_cost_management.py::TestAICostManager::test_optimization_recommendations", "type": "Coroutine", "lineno": 548}, {"nodeid": "tests/test_ai_cost_management.py::TestAICostManager::test_cost_reporting_endpoints", "type": "Coroutine", "lineno": 569}, {"nodeid": "tests/test_ai_cost_management.py::TestAICostManager::test_real_time_cost_monitoring", "type": "Coroutine", "lineno": 583}, {"nodeid": "tests/test_ai_cost_management.py::TestAICostManager::test_user_cost_limits", "type": "Coroutine", "lineno": 600}, {"nodeid": "tests/test_ai_cost_management.py::TestAICostManager::test_cost_forecasting", "type": "Coroutine", "lineno": 620}]}, {"nodeid": "tests/test_ai_cost_management.py::TestCostOptimizationStrategies", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_cost_management.py::TestCostOptimizationStrategies::test_intelligent_model_routing", "type": "Coroutine", "lineno": 648}, {"nodeid": "tests/test_ai_cost_management.py::TestCostOptimizationStrategies::test_dynamic_caching_strategy", "type": "Coroutine", "lineno": 665}, {"nodeid": "tests/test_ai_cost_management.py::TestCostOptimizationStrategies::test_prompt_compression_optimization", "type": "Coroutine", "lineno": 694}, {"nodeid": "tests/test_ai_cost_management.py::TestCostOptimizationStrategies::test_batch_request_optimization", "type": "Coroutine", "lineno": 721}]}, {"nodeid": "tests/test_ai_cost_management.py::TestCostReportingAndAnalytics", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_cost_management.py::TestCostReportingAndAnalytics::test_executive_cost_dashboard", "type": "Coroutine", "lineno": 743}, {"nodeid": "tests/test_ai_cost_management.py::TestCostReportingAndAnalytics::test_cost_attribution_analysis", "type": "Coroutine", "lineno": 769}, {"nodeid": "tests/test_ai_cost_management.py::TestCostReportingAndAnalytics::test_predictive_cost_modeling", "type": "Coroutine", "lineno": 787}]}, {"nodeid": "tests/test_ai_cost_management.py::TestIntegrationWithAIServices", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_cost_management.py::TestIntegrationWithAIServices::test_cost_tracking_with_real_gemini_call", "type": "Coroutine", "lineno": 817}, {"nodeid": "tests/test_ai_cost_management.py::TestIntegrationWithAIServices::test_budget_alert_integration", "type": "Coroutine", "lineno": 850}]}, {"nodeid": "tests/test_ai_cost_management.py", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_cost_management.py::TestAIUsageMetrics", "type": "Class"}, {"nodeid": "tests/test_ai_cost_management.py::TestModelCostConfig", "type": "Class"}, {"nodeid": "tests/test_ai_cost_management.py::TestCostTrackingService", "type": "Class"}, {"nodeid": "tests/test_ai_cost_management.py::TestBudgetAlertService", "type": "Class"}, {"nodeid": "tests/test_ai_cost_management.py::TestCostOptimizationService", "type": "Class"}, {"nodeid": "tests/test_ai_cost_management.py::TestAICostManager", "type": "Class"}, {"nodeid": "tests/test_ai_cost_management.py::TestCostOptimizationStrategies", "type": "Class"}, {"nodeid": "tests/test_ai_cost_management.py::TestCostReportingAndAnalytics", "type": "Class"}, {"nodeid": "tests/test_ai_cost_management.py::TestIntegrationWithAIServices", "type": "Class"}]}, {"nodeid": "tests/test_ai_ethics.py::TestBiasDetection", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_ethics.py::TestBiasDetection::test_gender_bias_in_compliance_advice", "type": "Function", "lineno": 21}, {"nodeid": "tests/test_ai_ethics.py::TestBiasDetection::test_company_size_bias", "type": "Function", "lineno": 49}, {"nodeid": "tests/test_ai_ethics.py::TestBiasDetection::test_industry_fairness", "type": "Function", "lineno": 75}]}, {"nodeid": "tests/test_ai_ethics.py::TestHallucinationPrevention", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_ethics.py::TestHallucinationPrevention::test_factual_accuracy_against_golden_dataset[GDPR]", "type": "Function", "lineno": 152}, {"nodeid": "tests/test_ai_ethics.py::TestHallucinationPrevention::test_factual_accuracy_against_golden_dataset[ISO 27001]", "type": "Function", "lineno": 152}, {"nodeid": "tests/test_ai_ethics.py::TestHallucinationPrevention::test_factual_accuracy_against_golden_dataset[SOX]", "type": "Function", "lineno": 152}, {"nodeid": "tests/test_ai_ethics.py::TestHallucinationPrevention::test_factual_accuracy_against_golden_dataset[HIPAA]", "type": "Function", "lineno": 152}, {"nodeid": "tests/test_ai_ethics.py::TestHallucinationPrevention::test_unknown_regulation_handling", "type": "Function", "lineno": 173}, {"nodeid": "tests/test_ai_ethics.py::TestHallucinationPrevention::test_date_and_version_accuracy", "type": "Function", "lineno": 214}]}, {"nodeid": "tests/test_ai_ethics.py::TestAdversarialRobustness", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_ethics.py::TestAdversarialRobustness::test_prompt_injection_resistance", "type": "Function", "lineno": 264}, {"nodeid": "tests/test_ai_ethics.py::TestAdversarialRobustness::test_out_of_scope_question_handling", "type": "Function", "lineno": 314}, {"nodeid": "tests/test_ai_ethics.py::TestAdversarialRobustness::test_malicious_input_sanitization", "type": "Function", "lineno": 347}]}, {"nodeid": "tests/test_ai_ethics.py::TestExplainability", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_ethics.py::TestExplainability::test_reasoning_transparency", "type": "Function", "lineno": 382}, {"nodeid": "tests/test_ai_ethics.py::TestExplainability::test_confidence_scoring", "type": "Function", "lineno": 421}, {"nodeid": "tests/test_ai_ethics.py::TestExplainability::test_source_attribution", "type": "Function", "lineno": 442}]}, {"nodeid": "tests/test_ai_ethics.py::TestResponsibleAI", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_ethics.py::TestResponsibleAI::test_harmful_advice_prevention", "type": "Function", "lineno": 480}, {"nodeid": "tests/test_ai_ethics.py::TestResponsibleAI::test_ethical_language_usage", "type": "Function", "lineno": 512}, {"nodeid": "tests/test_ai_ethics.py::TestResponsibleAI::test_uncertainty_acknowledgment", "type": "Function", "lineno": 540}]}, {"nodeid": "tests/test_ai_ethics.py", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_ethics.py::TestBiasDetection", "type": "Class"}, {"nodeid": "tests/test_ai_ethics.py::TestHallucinationPrevention", "type": "Class"}, {"nodeid": "tests/test_ai_ethics.py::TestAdversarialRobustness", "type": "Class"}, {"nodeid": "tests/test_ai_ethics.py::TestExplainability", "type": "Class"}, {"nodeid": "tests/test_ai_ethics.py::TestResponsibleAI", "type": "Class"}]}, {"nodeid": "tests/test_ai_neon.py", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_neon.py::test_ai_functionality", "type": "Coroutine", "lineno": 17}]}, {"nodeid": "tests/test_ai_policy_functional.py", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_policy_functional.py::test_ai_policy_generation", "type": "Coroutine", "lineno": 27}, {"nodeid": "tests/test_ai_policy_functional.py::test_frameworks_availability", "type": "Coroutine", "lineno": 101}]}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGenerationService", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGenerationService::test_policy_generator_initialization", "type": "Function", "lineno": 76}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGenerationService::test_circuit_breaker_configuration", "type": "Function", "lineno": 85}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGenerationService::test_policy_generation_success_google", "type": "Function", "lineno": 102}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGenerationService::test_policy_generation_fallback_to_openai", "type": "Function", "lineno": 146}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGenerationService::test_policy_generation_both_providers_fail", "type": "Function", "lineno": 169}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGenerationService::test_template_processor_iso27001_integration", "type": "Function", "lineno": 186}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGenerationService::test_policy_customization_levels", "type": "Function", "lineno": 202}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGenerationService::test_policy_validation_uk_specific", "type": "Function", "lineno": 241}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGenerationService::test_cost_optimization_caching", "type": "Function", "lineno": 279}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGenerationService::test_policy_refinement_iterative", "type": "Function", "lineno": 303}]}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGeneratorAPIIntegration", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGeneratorAPIIntegration::test_generate_policy_endpoint", "type": "Function", "lineno": 332}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGeneratorAPIIntegration::test_refine_policy_endpoint", "type": "Function", "lineno": 373}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGeneratorAPIIntegration::test_policy_templates_endpoint", "type": "Function", "lineno": 396}]}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGeneratorPerformance", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGeneratorPerformance::test_policy_generation_response_time", "type": "Function", "lineno": 410}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGeneratorPerformance::test_concurrent_policy_generation", "type": "Function", "lineno": 439}]}, {"nodeid": "tests/test_ai_policy_generator.py", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGenerationService", "type": "Class"}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGeneratorAPIIntegration", "type": "Class"}, {"nodeid": "tests/test_ai_policy_generator.py::TestPolicyGeneratorPerformance", "type": "Class"}]}, {"nodeid": "tests/test_ai_policy_simple.py::TestPolicyGeneratorBasic", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_policy_simple.py::TestPolicyGeneratorBasic::test_policy_generator_initialization", "type": "Function", "lineno": 13}, {"nodeid": "tests/test_ai_policy_simple.py::TestPolicyGeneratorBasic::test_template_processor_initialization", "type": "Function", "lineno": 24}, {"nodeid": "tests/test_ai_policy_simple.py::TestPolicyGeneratorBasic::test_mock_policy_generation", "type": "Function", "lineno": 32}, {"nodeid": "tests/test_ai_policy_simple.py::TestPolicyGeneratorBasic::test_cache_key_generation", "type": "Function", "lineno": 57}, {"nodeid": "tests/test_ai_policy_simple.py::TestPolicyGeneratorBasic::test_fallback_content_generation", "type": "Function", "lineno": 79}]}, {"nodeid": "tests/test_ai_policy_simple.py::TestPolicyGeneratorIntegration", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_policy_simple.py::TestPolicyGeneratorIntegration::test_circuit_breaker_integration", "type": "Function", "lineno": 98}, {"nodeid": "tests/test_ai_policy_simple.py::TestPolicyGeneratorIntegration::test_template_processor_integration", "type": "Function", "lineno": 108}]}, {"nodeid": "tests/test_ai_policy_simple.py", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_policy_simple.py::TestPolicyGeneratorBasic", "type": "Class"}, {"nodeid": "tests/test_ai_policy_simple.py::TestPolicyGeneratorIntegration", "type": "Class"}]}, {"nodeid": "tests/test_ai_quick.py", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_quick.py::test_ai_direct", "type": "Coroutine", "lineno": 11}]}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiter", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiter::test_rate_limiter_allows_requests_within_limit", "type": "Coroutine", "lineno": 29}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiter::test_rate_limiter_blocks_requests_over_limit", "type": "Coroutine", "lineno": 40}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiter::test_rate_limiter_burst_allowance", "type": "Coroutine", "lineno": 59}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiter::test_rate_limiter_window_reset", "type": "Coroutine", "lineno": 77}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiter::test_rate_limiter_different_users", "type": "Coroutine", "lineno": 101}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiter::test_get_remaining_requests", "type": "Function", "lineno": 120}]}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiterInstances", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiterInstances::test_ai_help_limiter_configuration", "type": "Function", "lineno": 138}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiterInstances::test_ai_followup_limiter_configuration", "type": "Function", "lineno": 143}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiterInstances::test_ai_analysis_limiter_configuration", "type": "Function", "lineno": 148}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiterInstances::test_ai_recommendations_limiter_configuration", "type": "Function", "lineno": 153}]}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimitStats", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimitStats::test_get_ai_rate_limit_stats_structure", "type": "Function", "lineno": 162}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimitStats::test_rate_limit_stats_initial_values", "type": "Function", "lineno": 175}]}, {"nodeid": "tests/test_ai_rate_limiting.py::TestRateLimitingIntegration", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_rate_limiting.py::TestRateLimitingIntegration::test_rate_limiting_with_mock_endpoint", "type": "Coroutine", "lineno": 188}, {"nodeid": "tests/test_ai_rate_limiting.py::TestRateLimitingIntegration::test_concurrent_rate_limiting", "type": "Coroutine", "lineno": 230}]}, {"nodeid": "tests/test_ai_rate_limiting.py", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiter", "type": "Class"}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimiterInstances", "type": "Class"}, {"nodeid": "tests/test_ai_rate_limiting.py::TestAIRateLimitStats", "type": "Class"}, {"nodeid": "tests/test_ai_rate_limiting.py::TestRateLimitingIntegration", "type": "Class"}]}, {"nodeid": "tests/test_ai_simple.py", "outcome": "passed", "result": [{"nodeid": "tests/test_ai_simple.py::test_neon_and_ai", "type": "Coroutine", "lineno": 13}]}, {"nodeid": "tests/test_analytics_direct.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_api_endpoints.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_app.py", "outcome": "passed", "result": [{"nodeid": "tests/test_app.py::test_lifespan", "type": "Function", "lineno": 11}]}, {"nodeid": "tests/test_assessment_workflow_e2e.py::TestCompleteAssessmentWorkflow", "outcome": "passed", "result": [{"nodeid": "tests/test_assessment_workflow_e2e.py::TestCompleteAssessmentWorkflow::test_complete_gdpr_assessment_workflow", "type": "Function", "lineno": 41}]}, {"nodeid": "tests/test_assessment_workflow_e2e.py", "outcome": "passed", "result": [{"nodeid": "tests/test_assessment_workflow_e2e.py::TestCompleteAssessmentWorkflow", "type": "Class"}]}, {"nodeid": "tests/test_auth_fix.py::TestAuthenticationFix", "outcome": "passed", "result": [{"nodeid": "tests/test_auth_fix.py::TestAuthenticationFix::test_fixed_authentication_flow", "type": "Function", "lineno": 23}]}, {"nodeid": "tests/test_auth_fix.py", "outcome": "passed", "result": [{"nodeid": "tests/test_auth_fix.py::TestAuthenticationFix", "type": "Class"}]}, {"nodeid": "tests/test_auth_flow.py", "outcome": "passed", "result": [{"nodeid": "tests/test_auth_flow.py::test_auth_flow", "type": "Function", "lineno": 14}]}, {"nodeid": "tests/test_compliance_accuracy.py::TestGDPRAccuracy", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_accuracy.py::TestGDPRAccuracy::test_gdpr_penalty_amounts_accuracy", "type": "Function", "lineno": 17}, {"nodeid": "tests/test_compliance_accuracy.py::TestGDPRAccuracy::test_gdpr_data_subject_rights_accuracy", "type": "Function", "lineno": 43}, {"nodeid": "tests/test_compliance_accuracy.py::TestGDPRAccuracy::test_gdpr_breach_notification_timeline_accuracy", "type": "Function", "lineno": 107}, {"nodeid": "tests/test_compliance_accuracy.py::TestGDPRAccuracy::test_gdpr_lawful_basis_accuracy", "type": "Function", "lineno": 138}]}, {"nodeid": "tests/test_compliance_accuracy.py::TestISO27001Accuracy", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_accuracy.py::TestISO27001Accuracy::test_iso27001_security_domains_accuracy", "type": "Function", "lineno": 177}, {"nodeid": "tests/test_compliance_accuracy.py::TestISO27001Accuracy::test_iso27001_isms_requirements_accuracy", "type": "Function", "lineno": 214}]}, {"nodeid": "tests/test_compliance_accuracy.py::TestUKSpecificRegulations", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_accuracy.py::TestUKSpecificRegulations::test_data_protection_act_2018_accuracy", "type": "Function", "lineno": 255}, {"nodeid": "tests/test_compliance_accuracy.py::TestUKSpecificRegulations::test_ico_guidance_accuracy", "type": "Function", "lineno": 285}]}, {"nodeid": "tests/test_compliance_accuracy.py::TestSectorSpecificCompliance", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_accuracy.py::TestSectorSpecificCompliance::test_financial_services_compliance_accuracy", "type": "Function", "lineno": 316}, {"nodeid": "tests/test_compliance_accuracy.py::TestSectorSpecificCompliance::test_healthcare_compliance_accuracy", "type": "Function", "lineno": 346}]}, {"nodeid": "tests/test_compliance_accuracy.py::TestComplianceContentValidation", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_accuracy.py::TestComplianceContentValidation::test_policy_content_structure_validation", "type": "Function", "lineno": 385}, {"nodeid": "tests/test_compliance_accuracy.py::TestComplianceContentValidation::test_implementation_plan_completeness", "type": "Function", "lineno": 446}, {"nodeid": "tests/test_compliance_accuracy.py::TestComplianceContentValidation::test_risk_assessment_accuracy", "type": "Function", "lineno": 465}]}, {"nodeid": "tests/test_compliance_accuracy.py::TestSMEValidationFramework", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_accuracy.py::TestSMEValidationFramework::test_gdpr_expert_validation_checklist", "type": "Function", "lineno": 511}, {"nodeid": "tests/test_compliance_accuracy.py::TestSMEValidationFramework::test_compliance_content_versioning", "type": "Function", "lineno": 559}, {"nodeid": "tests/test_compliance_accuracy.py::TestSMEValidationFramework::test_automated_content_flagging", "type": "Function", "lineno": 595}]}, {"nodeid": "tests/test_compliance_accuracy.py", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_accuracy.py::TestGDPRAccuracy", "type": "Class"}, {"nodeid": "tests/test_compliance_accuracy.py::TestISO27001Accuracy", "type": "Class"}, {"nodeid": "tests/test_compliance_accuracy.py::TestUKSpecificRegulations", "type": "Class"}, {"nodeid": "tests/test_compliance_accuracy.py::TestSectorSpecificCompliance", "type": "Class"}, {"nodeid": "tests/test_compliance_accuracy.py::TestComplianceContentValidation", "type": "Class"}, {"nodeid": "tests/test_compliance_accuracy.py::TestSMEValidationFramework", "type": "Class"}]}, {"nodeid": "tests/test_compliance_assistant_assessment.py::TestAssessmentHelp", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_assistant_assessment.py::TestAssessmentHelp::test_get_assessment_help_success", "type": "Coroutine", "lineno": 78}, {"nodeid": "tests/test_compliance_assistant_assessment.py::TestAssessmentHelp::test_get_assessment_help_with_fallback", "type": "Coroutine", "lineno": 102}]}, {"nodeid": "tests/test_compliance_assistant_assessment.py::TestAssessmentFollowup", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_assistant_assessment.py::TestAssessmentFollowup::test_generate_assessment_followup_success", "type": "Coroutine", "lineno": 125}]}, {"nodeid": "tests/test_compliance_assistant_assessment.py::TestAssessmentAnalysis", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_assistant_assessment.py::TestAssessmentAnalysis::test_analyze_assessment_results_success", "type": "Coroutine", "lineno": 153}]}, {"nodeid": "tests/test_compliance_assistant_assessment.py::TestAssessmentRecommendations", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_assistant_assessment.py::TestAssessmentRecommendations::test_get_assessment_recommendations_success", "type": "Coroutine", "lineno": 180}]}, {"nodeid": "tests/test_compliance_assistant_assessment.py::TestIntentClassification", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_assistant_assessment.py::TestIntentClassification::test_classify_assessment_intent", "type": "Function", "lineno": 207}]}, {"nodeid": "tests/test_compliance_assistant_assessment.py::TestEntityExtraction", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_assistant_assessment.py::TestEntityExtraction::test_extract_assessment_entities", "type": "Function", "lineno": 238}]}, {"nodeid": "tests/test_compliance_assistant_assessment.py", "outcome": "passed", "result": [{"nodeid": "tests/test_compliance_assistant_assessment.py::TestAssessmentHelp", "type": "Class"}, {"nodeid": "tests/test_compliance_assistant_assessment.py::TestAssessmentFollowup", "type": "Class"}, {"nodeid": "tests/test_compliance_assistant_assessment.py::TestAssessmentAnalysis", "type": "Class"}, {"nodeid": "tests/test_compliance_assistant_assessment.py::TestAssessmentRecommendations", "type": "Class"}, {"nodeid": "tests/test_compliance_assistant_assessment.py::TestIntentClassification", "type": "Class"}, {"nodeid": "tests/test_compliance_assistant_assessment.py::TestEntityExtraction", "type": "Class"}]}, {"nodeid": "tests/test_database_performance.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/test_database_performance.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/test_database_performance.py:12: in <module>\n    from database.models import User, EvidenceItem, BusinessProfile\nE   ImportError: cannot import name 'User' from 'database.models' (/home/omar/Documents/ruleIQ/database/models/__init__.py)"}, {"nodeid": "tests/test_db_connection.py", "outcome": "passed", "result": [{"nodeid": "tests/test_db_connection.py::test_connection", "type": "Function", "lineno": 10}]}, {"nodeid": "tests/test_db_init.py", "outcome": "passed", "result": [{"nodeid": "tests/test_db_init.py::test_database_connection", "type": "Function", "lineno": 259}, {"nodeid": "tests/test_db_init.py::test_sync_initialization", "type": "Function", "lineno": 23}, {"nodeid": "tests/test_db_init.py::test_async_operations", "type": "Coroutine", "lineno": 59}]}, {"nodeid": "tests/test_e2e_workflows.py::TestCompleteComplianceJourney", "outcome": "passed", "result": [{"nodeid": "tests/test_e2e_workflows.py::TestCompleteComplianceJourney::test_new_business_complete_gdpr_journey", "type": "Function", "lineno": 17}, {"nodeid": "tests/test_e2e_workflows.py::TestCompleteComplianceJourney::test_existing_business_framework_migration_journey", "type": "Function", "lineno": 198}]}, {"nodeid": "tests/test_e2e_workflows.py::TestErrorStateHandling", "outcome": "passed", "result": [{"nodeid": "tests/test_e2e_workflows.py::TestErrorStateHandling::test_network_interruption_recovery", "type": "Function", "lineno": 244}, {"nodeid": "tests/test_e2e_workflows.py::TestErrorStateHandling::test_invalid_data_graceful_handling", "type": "Function", "lineno": 278}, {"nodeid": "tests/test_e2e_workflows.py::TestErrorStateHandling::test_concurrent_user_conflict_resolution", "type": "Function", "lineno": 304}, {"nodeid": "tests/test_e2e_workflows.py::TestErrorStateHandling::test_external_service_failure_fallback", "type": "Function", "lineno": 339}]}, {"nodeid": "tests/test_e2e_workflows.py::TestAuditWorkflows", "outcome": "passed", "result": [{"nodeid": "tests/test_e2e_workflows.py::TestAuditWorkflows::test_comprehensive_audit_trail", "type": "Function", "lineno": 380}, {"nodeid": "tests/test_e2e_workflows.py::TestAuditWorkflows::test_compliance_report_generation", "type": "Function", "lineno": 454}, {"nodeid": "tests/test_e2e_workflows.py::TestAuditWorkflows::test_regulatory_submission_preparation", "type": "Function", "lineno": 515}]}, {"nodeid": "tests/test_e2e_workflows.py::TestBusinessContinuityWorkflows", "outcome": "passed", "result": [{"nodeid": "tests/test_e2e_workflows.py::TestBusinessContinuityWorkflows::test_data_backup_and_recovery", "type": "Function", "lineno": 570}, {"nodeid": "tests/test_e2e_workflows.py::TestBusinessContinuityWorkflows::test_compliance_deadline_management", "type": "Function", "lineno": 613}, {"nodeid": "tests/test_e2e_workflows.py::TestBusinessContinuityWorkflows::test_multi_framework_coordination", "type": "Function", "lineno": 639}]}, {"nodeid": "tests/test_e2e_workflows.py", "outcome": "passed", "result": [{"nodeid": "tests/test_e2e_workflows.py::TestCompleteComplianceJourney", "type": "Class"}, {"nodeid": "tests/test_e2e_workflows.py::TestErrorStateHandling", "type": "Class"}, {"nodeid": "tests/test_e2e_workflows.py::TestAuditWorkflows", "type": "Class"}, {"nodeid": "tests/test_e2e_workflows.py::TestBusinessContinuityWorkflows", "type": "Class"}]}, {"nodeid": "tests/test_fixture_isolation.py", "outcome": "passed", "result": [{"nodeid": "tests/test_fixture_isolation.py::test_authenticated_client_works", "type": "Function", "lineno": 7}, {"nodeid": "tests/test_fixture_isolation.py::test_unauthenticated_client_fails", "type": "Function", "lineno": 47}, {"nodeid": "tests/test_fixture_isolation.py::test_authenticated_client_works_again", "type": "Function", "lineno": 60}]}, {"nodeid": "tests/test_freemium_simple.py", "outcome": "passed", "result": [{"nodeid": "tests/test_freemium_simple.py::test_assessment_lead_creation", "type": "Function", "lineno": 9}, {"nodeid": "tests/test_freemium_simple.py::test_assessment_lead_with_all_fields", "type": "Function", "lineno": 33}]}, {"nodeid": "tests/test_graph_execution.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/test_graph_execution.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/test_graph_execution.py:27: in <module>\n    from tests.fixtures.mock_llm import MockLLM, mock_llm_factory\nE   ImportError: cannot import name 'mock_llm_factory' from 'tests.fixtures.mock_llm' (/home/omar/Documents/ruleIQ/tests/fixtures/mock_llm.py)"}, {"nodeid": "tests/test_hybrid_approach.py", "outcome": "passed", "result": [{"nodeid": "tests/test_hybrid_approach.py::test_sync_database_fixture_works", "type": "Function", "lineno": 8}, {"nodeid": "tests/test_hybrid_approach.py::test_test_client_fixture_works", "type": "Function", "lineno": 21}, {"nodeid": "tests/test_hybrid_approach.py::test_authentication_override_works", "type": "Function", "lineno": 29}, {"nodeid": "tests/test_hybrid_approach.py::test_ai_assessment_endpoint_authentication", "type": "Function", "lineno": 39}, {"nodeid": "tests/test_hybrid_approach.py::test_followup_questions_endpoint_basic", "type": "Function", "lineno": 54}]}, {"nodeid": "tests/test_input_validation.py::TestFieldValidator", "outcome": "passed", "result": [{"nodeid": "tests/test_input_validation.py::TestFieldValidator::test_validate_string_success", "type": "Function", "lineno": 20}, {"nodeid": "tests/test_input_validation.py::TestFieldValidator::test_validate_string_length_error", "type": "Function", "lineno": 25}, {"nodeid": "tests/test_input_validation.py::TestFieldValidator::test_validate_string_dangerous_chars", "type": "Function", "lineno": 33}, {"nodeid": "tests/test_input_validation.py::TestFieldValidator::test_validate_integer_success", "type": "Function", "lineno": 38}, {"nodeid": "tests/test_input_validation.py::TestFieldValidator::test_validate_integer_range_error", "type": "Function", "lineno": 43}, {"nodeid": "tests/test_input_validation.py::TestFieldValidator::test_validate_boolean_success", "type": "Function", "lineno": 48}, {"nodeid": "tests/test_input_validation.py::TestFieldValidator::test_validate_uuid_success", "type": "Function", "lineno": 55}, {"nodeid": "tests/test_input_validation.py::TestFieldValidator::test_validate_uuid_error", "type": "Function", "lineno": 61}, {"nodeid": "tests/test_input_validation.py::TestFieldValidator::test_validate_email_success", "type": "Function", "lineno": 66}, {"nodeid": "tests/test_input_validation.py::TestFieldValidator::test_validate_email_error", "type": "Function", "lineno": 71}, {"nodeid": "tests/test_input_validation.py::TestFieldValidator::test_validate_enum_success", "type": "Function", "lineno": 76}, {"nodeid": "tests/test_input_validation.py::TestFieldValidator::test_validate_enum_error", "type": "Function", "lineno": 81}]}, {"nodeid": "tests/test_input_validation.py::TestSecurityValidator", "outcome": "passed", "result": [{"nodeid": "tests/test_input_validation.py::TestSecurityValidator::test_scan_for_dangerous_patterns", "type": "Function", "lineno": 90}, {"nodeid": "tests/test_input_validation.py::TestSecurityValidator::test_safe_patterns", "type": "Function", "lineno": 108}, {"nodeid": "tests/test_input_validation.py::TestSecurityValidator::test_validate_no_dangerous_content", "type": "Function", "lineno": 122}]}, {"nodeid": "tests/test_input_validation.py::TestWhitelistValidator", "outcome": "passed", "result": [{"nodeid": "tests/test_input_validation.py::TestWhitelistValidator::test_evidence_item_validation_success", "type": "Function", "lineno": 146}, {"nodeid": "tests/test_input_validation.py::TestWhitelistValidator::test_evidence_item_validation_invalid_field", "type": "Function", "lineno": 161}, {"nodeid": "tests/test_input_validation.py::TestWhitelistValidator::test_evidence_item_validation_invalid_enum", "type": "Function", "lineno": 170}, {"nodeid": "tests/test_input_validation.py::TestWhitelistValidator::test_business_profile_validation_success", "type": "Function", "lineno": 179}, {"nodeid": "tests/test_input_validation.py::TestWhitelistValidator::test_business_profile_validation_invalid_field", "type": "Function", "lineno": 194}]}, {"nodeid": "tests/test_input_validation.py::TestConvenienceFunctions", "outcome": "passed", "result": [{"nodeid": "tests/test_input_validation.py::TestConvenienceFunctions::test_validate_evidence_update_success", "type": "Function", "lineno": 207}, {"nodeid": "tests/test_input_validation.py::TestConvenienceFunctions::test_validate_evidence_update_security_error", "type": "Function", "lineno": 218}, {"nodeid": "tests/test_input_validation.py::TestConvenienceFunctions::test_validate_evidence_update_whitelist_error", "type": "Function", "lineno": 228}, {"nodeid": "tests/test_input_validation.py::TestConvenienceFunctions::test_validate_business_profile_update_success", "type": "Function", "lineno": 235}, {"nodeid": "tests/test_input_validation.py::TestConvenienceFunctions::test_validate_business_profile_update_error", "type": "Function", "lineno": 242}]}, {"nodeid": "tests/test_input_validation.py::TestAttackScenarios", "outcome": "passed", "result": [{"nodeid": "tests/test_input_validation.py::TestAttackScenarios::test_sql_injection_attempt", "type": "Function", "lineno": 253}, {"nodeid": "tests/test_input_validation.py::TestAttackScenarios::test_xss_injection_attempt", "type": "Function", "lineno": 263}, {"nodeid": "tests/test_input_validation.py::TestAttackScenarios::test_path_traversal_attempt", "type": "Function", "lineno": 273}, {"nodeid": "tests/test_input_validation.py::TestAttackScenarios::test_code_execution_attempt", "type": "Function", "lineno": 283}, {"nodeid": "tests/test_input_validation.py::TestAttackScenarios::test_field_injection_attempt", "type": "Function", "lineno": 293}, {"nodeid": "tests/test_input_validation.py::TestAttackScenarios::test_massive_payload_attempt", "type": "Function", "lineno": 304}, {"nodeid": "tests/test_input_validation.py::TestAttackScenarios::test_nested_object_attack", "type": "Function", "lineno": 314}]}, {"nodeid": "tests/test_input_validation.py", "outcome": "passed", "result": [{"nodeid": "tests/test_input_validation.py::TestFieldValidator", "type": "Class"}, {"nodeid": "tests/test_input_validation.py::TestSecurityValidator", "type": "Class"}, {"nodeid": "tests/test_input_validation.py::TestWhitelistValidator", "type": "Class"}, {"nodeid": "tests/test_input_validation.py::TestConvenienceFunctions", "type": "Class"}, {"nodeid": "tests/test_input_validation.py::TestAttackScenarios", "type": "Class"}]}, {"nodeid": "tests/test_integration.py::TestAuthenticationEndpoints", "outcome": "passed", "result": [{"nodeid": "tests/test_integration.py::TestAuthenticationEndpoints::test_user_registration_flow", "type": "Function", "lineno": 16}, {"nodeid": "tests/test_integration.py::TestAuthenticationEndpoints::test_user_login_flow", "type": "Function", "lineno": 37}, {"nodeid": "tests/test_integration.py::TestAuthenticationEndpoints::test_protected_endpoint_access", "type": "Function", "lineno": 53}, {"nodeid": "tests/test_integration.py::TestAuthenticationEndpoints::test_invalid_login_credentials", "type": "Function", "lineno": 62}]}, {"nodeid": "tests/test_integration.py::TestBusinessProfileEndpoints", "outcome": "passed", "result": [{"nodeid": "tests/test_integration.py::TestBusinessProfileEndpoints::test_create_business_profile", "type": "Function", "lineno": 81}, {"nodeid": "tests/test_integration.py::TestBusinessProfileEndpoints::test_get_business_profile", "type": "Function", "lineno": 98}, {"nodeid": "tests/test_integration.py::TestBusinessProfileEndpoints::test_update_business_profile", "type": "Function", "lineno": 120}, {"nodeid": "tests/test_integration.py::TestBusinessProfileEndpoints::test_business_profile_validation", "type": "Function", "lineno": 145}]}, {"nodeid": "tests/test_integration.py::TestAssessmentEndpoints", "outcome": "passed", "result": [{"nodeid": "tests/test_integration.py::TestAssessmentEndpoints::test_create_assessment_session", "type": "Function", "lineno": 166}, {"nodeid": "tests/test_integration.py::TestAssessmentEndpoints::test_get_assessment_questions", "type": "Function", "lineno": 200}, {"nodeid": "tests/test_integration.py::TestAssessmentEndpoints::test_submit_assessment_response", "type": "Function", "lineno": 231}, {"nodeid": "tests/test_integration.py::TestAssessmentEndpoints::test_get_assessment_recommendations", "type": "Function", "lineno": 272}]}, {"nodeid": "tests/test_integration.py::TestFrameworkEndpoints", "outcome": "passed", "result": [{"nodeid": "tests/test_integration.py::TestFrameworkEndpoints::test_get_available_frameworks", "type": "Function", "lineno": 324}, {"nodeid": "tests/test_integration.py::TestFrameworkEndpoints::test_get_framework_details", "type": "Function", "lineno": 350}, {"nodeid": "tests/test_integration.py::TestFrameworkEndpoints::test_framework_recommendations", "type": "Function", "lineno": 376}]}, {"nodeid": "tests/test_integration.py::TestPolicyEndpoints", "outcome": "passed", "result": [{"nodeid": "tests/test_integration.py::TestPolicyEndpoints::test_generate_policy", "type": "Function", "lineno": 409}, {"nodeid": "tests/test_integration.py::TestPolicyEndpoints::test_get_generated_policies", "type": "Function", "lineno": 459}, {"nodeid": "tests/test_integration.py::TestPolicyEndpoints::test_update_policy_status", "type": "Function", "lineno": 468}]}, {"nodeid": "tests/test_integration.py::TestImplementationEndpoints", "outcome": "passed", "result": [{"nodeid": "tests/test_integration.py::TestImplementationEndpoints::test_generate_implementation_plan", "type": "Function", "lineno": 510}, {"nodeid": "tests/test_integration.py::TestImplementationEndpoints::test_get_implementation_plans", "type": "Function", "lineno": 539}, {"nodeid": "tests/test_integration.py::TestImplementationEndpoints::test_update_task_progress", "type": "Function", "lineno": 548}]}, {"nodeid": "tests/test_integration.py::TestEvidenceEndpoints", "outcome": "passed", "result": [{"nodeid": "tests/test_integration.py::TestEvidenceEndpoints::test_get_evidence_requirements", "type": "Function", "lineno": 604}, {"nodeid": "tests/test_integration.py::TestEvidenceEndpoints::test_create_evidence_item", "type": "Function", "lineno": 628}, {"nodeid": "tests/test_integration.py::TestEvidenceEndpoints::test_update_evidence_status", "type": "Function", "lineno": 661}]}, {"nodeid": "tests/test_integration.py::TestReadinessEndpoints", "outcome": "passed", "result": [{"nodeid": "tests/test_integration.py::TestReadinessEndpoints::test_get_readiness_assessment", "type": "Function", "lineno": 704}, {"nodeid": "tests/test_integration.py::TestReadinessEndpoints::test_generate_compliance_report", "type": "Function", "lineno": 729}]}, {"nodeid": "tests/test_integration.py::TestEndToEndWorkflow", "outcome": "passed", "result": [{"nodeid": "tests/test_integration.py::TestEndToEndWorkflow::test_complete_compliance_journey", "type": "Function", "lineno": 765}]}, {"nodeid": "tests/test_integration.py", "outcome": "passed", "result": [{"nodeid": "tests/test_integration.py::TestAuthenticationEndpoints", "type": "Class"}, {"nodeid": "tests/test_integration.py::TestBusinessProfileEndpoints", "type": "Class"}, {"nodeid": "tests/test_integration.py::TestAssessmentEndpoints", "type": "Class"}, {"nodeid": "tests/test_integration.py::TestFrameworkEndpoints", "type": "Class"}, {"nodeid": "tests/test_integration.py::TestPolicyEndpoints", "type": "Class"}, {"nodeid": "tests/test_integration.py::TestImplementationEndpoints", "type": "Class"}, {"nodeid": "tests/test_integration.py::TestEvidenceEndpoints", "type": "Class"}, {"nodeid": "tests/test_integration.py::TestReadinessEndpoints", "type": "Class"}, {"nodeid": "tests/test_integration.py::TestEndToEndWorkflow", "type": "Class"}]}, {"nodeid": "tests/test_login.py", "outcome": "passed", "result": [{"nodeid": "tests/test_login.py::test_login", "type": "Function", "lineno": 7}]}, {"nodeid": "tests/test_master_integration.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/test_master_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/test_master_integration.py:23: in <module>\n    from langgraph_agent.agents.rag_system import RAGConfig\nE   ImportError: cannot import name 'RAGConfig' from 'langgraph_agent.agents.rag_system' (/home/omar/Documents/ruleIQ/langgraph_agent/agents/rag_system.py)"}, {"nodeid": "tests/test_minimal.py", "outcome": "passed", "result": [{"nodeid": "tests/test_minimal.py::test_simple", "type": "Function", "lineno": 0}]}, {"nodeid": "tests/test_mistral_embeddings.py", "outcome": "passed", "result": [{"nodeid": "tests/test_mistral_embeddings.py::test_mistral_embeddings", "type": "Coroutine", "lineno": 18}]}, {"nodeid": "tests/test_performance.py::TestAPIResponseTimes", "outcome": "passed", "result": [{"nodeid": "tests/test_performance.py::TestAPIResponseTimes::test_core_endpoint_response_times", "type": "Function", "lineno": 22}, {"nodeid": "tests/test_performance.py::TestAPIResponseTimes::test_database_query_performance", "type": "Function", "lineno": 67}]}, {"nodeid": "tests/test_performance.py::TestAIGenerationPerformance", "outcome": "passed", "result": [{"nodeid": "tests/test_performance.py::TestAIGenerationPerformance::test_ai_response_latency", "type": "Function", "lineno": 116}, {"nodeid": "tests/test_performance.py::TestAIGenerationPerformance::test_ai_content_caching_performance", "type": "Function", "lineno": 157}, {"nodeid": "tests/test_performance.py::TestAIGenerationPerformance::test_batch_ai_processing_efficiency", "type": "Function", "lineno": 186}]}, {"nodeid": "tests/test_performance.py::TestConcurrentUserLoad", "outcome": "passed", "result": [{"nodeid": "tests/test_performance.py::TestConcurrentUserLoad::test_concurrent_user_simulation", "type": "Function", "lineno": 241}, {"nodeid": "tests/test_performance.py::TestConcurrentUserLoad::test_database_connection_pooling", "type": "Function", "lineno": 261}, {"nodeid": "tests/test_performance.py::TestConcurrentUserLoad::test_memory_usage_under_load", "type": "Function", "lineno": 278}]}, {"nodeid": "tests/test_performance.py::TestSoakTesting", "outcome": "passed", "result": [{"nodeid": "tests/test_performance.py::TestSoakTesting::test_extended_operation_stability", "type": "Function", "lineno": 337}, {"nodeid": "tests/test_performance.py::TestSoakTesting::test_memory_leak_detection", "type": "Function", "lineno": 374}, {"nodeid": "tests/test_performance.py::TestSoakTesting::test_connection_pool_exhaustion", "type": "Function", "lineno": 404}]}, {"nodeid": "tests/test_performance.py::TestResourceUtilization", "outcome": "passed", "result": [{"nodeid": "tests/test_performance.py::TestResourceUtilization::test_cpu_usage_under_load", "type": "Function", "lineno": 433}, {"nodeid": "tests/test_performance.py::TestResourceUtilization::test_disk_io_efficiency", "type": "Function", "lineno": 468}, {"nodeid": "tests/test_performance.py::TestResourceUtilization::test_response_compression_efficiency", "type": "Function", "lineno": 496}]}, {"nodeid": "tests/test_performance.py::TestScalabilityLimits", "outcome": "passed", "result": [{"nodeid": "tests/test_performance.py::TestScalabilityLimits::test_maximum_concurrent_assessments", "type": "Function", "lineno": 523}, {"nodeid": "tests/test_performance.py::TestScalabilityLimits::test_large_data_set_handling", "type": "Function", "lineno": 545}, {"nodeid": "tests/test_performance.py::TestScalabilityLimits::test_pagination_performance", "type": "Function", "lineno": 567}]}, {"nodeid": "tests/test_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/test_performance.py::TestAPIResponseTimes", "type": "Class"}, {"nodeid": "tests/test_performance.py::TestAIGenerationPerformance", "type": "Class"}, {"nodeid": "tests/test_performance.py::TestConcurrentUserLoad", "type": "Class"}, {"nodeid": "tests/test_performance.py::TestSoakTesting", "type": "Class"}, {"nodeid": "tests/test_performance.py::TestResourceUtilization", "type": "Class"}, {"nodeid": "tests/test_performance.py::TestScalabilityLimits", "type": "Class"}]}, {"nodeid": "tests/test_phase1_endpoints.py", "outcome": "passed", "result": [{"nodeid": "tests/test_phase1_endpoints.py::test_endpoint", "type": "Function", "lineno": 11}]}, {"nodeid": "tests/test_phase1_fastapi.py", "outcome": "failed", "result": [], "longrepr": "tests/test_phase1_fastapi.py:12: in <module>\n    from main import app\nmain.py:11: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/test_phase1_state_management.py::TestStateReducers", "outcome": "passed", "result": [{"nodeid": "tests/test_phase1_state_management.py::TestStateReducers::test_merge_tool_outputs", "type": "Function", "lineno": 34}, {"nodeid": "tests/test_phase1_state_management.py::TestStateReducers::test_accumulate_errors_with_limit", "type": "Function", "lineno": 58}, {"nodeid": "tests/test_phase1_state_management.py::TestStateReducers::test_merge_compliance_data", "type": "Function", "lineno": 70}, {"nodeid": "tests/test_phase1_state_management.py::TestStateReducers::test_increment_counter", "type": "Function", "lineno": 109}, {"nodeid": "tests/test_phase1_state_management.py::TestStateReducers::test_update_metadata_with_history", "type": "Function", "lineno": 114}]}, {"nodeid": "tests/test_phase1_state_management.py::TestStateTransition", "outcome": "passed", "result": [{"nodeid": "tests/test_phase1_state_management.py::TestStateTransition::test_validate_transition_limits", "type": "Function", "lineno": 146}, {"nodeid": "tests/test_phase1_state_management.py::TestStateTransition::test_record_transition", "type": "Function", "lineno": 175}]}, {"nodeid": "tests/test_phase1_state_management.py::TestStateAggregator", "outcome": "passed", "result": [{"nodeid": "tests/test_phase1_state_management.py::TestStateAggregator::test_get_conversation_summary", "type": "Function", "lineno": 205}, {"nodeid": "tests/test_phase1_state_management.py::TestStateAggregator::test_get_compliance_summary", "type": "Function", "lineno": 228}, {"nodeid": "tests/test_phase1_state_management.py::TestStateAggregator::test_get_performance_metrics", "type": "Function", "lineno": 251}]}, {"nodeid": "tests/test_phase1_state_management.py::TestEnhancedComplianceGraph", "outcome": "passed", "result": [{"nodeid": "tests/test_phase1_state_management.py::TestEnhancedComplianceGraph::test_graph_initialization", "type": "Coroutine", "lineno": 289}, {"nodeid": "tests/test_phase1_state_management.py::TestEnhancedComplianceGraph::test_graph_execution_simple", "type": "Coroutine", "lineno": 298}, {"nodeid": "tests/test_phase1_state_management.py::TestEnhancedComplianceGraph::test_error_handling", "type": "Coroutine", "lineno": 324}, {"nodeid": "tests/test_phase1_state_management.py::TestEnhancedComplianceGraph::test_router_decision_logic", "type": "Coroutine", "lineno": 363}, {"nodeid": "tests/test_phase1_state_management.py::TestEnhancedComplianceGraph::test_profile_builder", "type": "Coroutine", "lineno": 379}, {"nodeid": "tests/test_phase1_state_management.py::TestEnhancedComplianceGraph::test_compliance_analyzer", "type": "Coroutine", "lineno": 395}]}, {"nodeid": "tests/test_phase1_state_management.py", "outcome": "passed", "result": [{"nodeid": "tests/test_phase1_state_management.py::TestStateReducers", "type": "Class"}, {"nodeid": "tests/test_phase1_state_management.py::TestStateTransition", "type": "Class"}, {"nodeid": "tests/test_phase1_state_management.py::TestStateAggregator", "type": "Class"}, {"nodeid": "tests/test_phase1_state_management.py::TestEnhancedComplianceGraph", "type": "Class"}]}, {"nodeid": "tests/test_phase2_error_handling.py::TestErrorClassification", "outcome": "passed", "result": [{"nodeid": "tests/test_phase2_error_handling.py::TestErrorClassification::test_classify_rate_limit_error", "type": "Function", "lineno": 35}, {"nodeid": "tests/test_phase2_error_handling.py::TestErrorClassification::test_classify_database_error", "type": "Function", "lineno": 51}, {"nodeid": "tests/test_phase2_error_handling.py::TestErrorClassification::test_classify_api_error", "type": "Function", "lineno": 66}, {"nodeid": "tests/test_phase2_error_handling.py::TestErrorClassification::test_classify_validation_error", "type": "Function", "lineno": 81}, {"nodeid": "tests/test_phase2_error_handling.py::TestErrorClassification::test_classify_timeout_error", "type": "Function", "lineno": 96}, {"nodeid": "tests/test_phase2_error_handling.py::TestErrorClassification::test_classify_network_error", "type": "Function", "lineno": 111}, {"nodeid": "tests/test_phase2_error_handling.py::TestErrorClassification::test_classify_by_explicit_type", "type": "Function", "lineno": 126}, {"nodeid": "tests/test_phase2_error_handling.py::TestErrorClassification::test_classify_unknown_error", "type": "Function", "lineno": 133}]}, {"nodeid": "tests/test_phase2_error_handling.py::TestRetryStrategies", "outcome": "passed", "result": [{"nodeid": "tests/test_phase2_error_handling.py::TestRetryStrategies::test_rate_limit_exponential_backoff", "type": "Coroutine", "lineno": 152}, {"nodeid": "tests/test_phase2_error_handling.py::TestRetryStrategies::test_database_linear_backoff", "type": "Coroutine", "lineno": 199}, {"nodeid": "tests/test_phase2_error_handling.py::TestRetryStrategies::test_api_error_fallback_strategy", "type": "Coroutine", "lineno": 239}, {"nodeid": "tests/test_phase2_error_handling.py::TestRetryStrategies::test_validation_error_immediate_fallback", "type": "Coroutine", "lineno": 269}, {"nodeid": "tests/test_phase2_error_handling.py::TestRetryStrategies::test_timeout_error_increases_timeout", "type": "Coroutine", "lineno": 288}]}, {"nodeid": "tests/test_phase2_error_handling.py::TestErrorHandlerIntegration", "outcome": "passed", "result": [{"nodeid": "tests/test_phase2_error_handling.py::TestErrorHandlerIntegration::test_error_handler_process_flow", "type": "Coroutine", "lineno": 325}, {"nodeid": "tests/test_phase2_error_handling.py::TestErrorHandlerIntegration::test_error_handler_no_errors", "type": "Coroutine", "lineno": 372}, {"nodeid": "tests/test_phase2_error_handling.py::TestErrorHandlerIntegration::test_error_handler_self_failure", "type": "Coroutine", "lineno": 389}]}, {"nodeid": "tests/test_phase2_error_handling.py::TestRoutingFunctions", "outcome": "passed", "result": [{"nodeid": "tests/test_phase2_error_handling.py::TestRoutingFunctions::test_should_route_to_error_handler", "type": "Function", "lineno": 414}, {"nodeid": "tests/test_phase2_error_handling.py::TestRoutingFunctions::test_get_recovery_node", "type": "Function", "lineno": 438}]}, {"nodeid": "tests/test_phase2_error_handling.py::TestEnhancedGraphWithErrorHandling", "outcome": "passed", "result": [{"nodeid": "tests/test_phase2_error_handling.py::TestEnhancedGraphWithErrorHandling::test_graph_error_routing", "type": "Coroutine", "lineno": 464}, {"nodeid": "tests/test_phase2_error_handling.py::TestEnhancedGraphWithErrorHandling::test_graph_recovery_routing", "type": "Coroutine", "lineno": 486}, {"nodeid": "tests/test_phase2_error_handling.py::TestEnhancedGraphWithErrorHandling::test_graph_node_error_tracking", "type": "Coroutine", "lineno": 506}, {"nodeid": "tests/test_phase2_error_handling.py::TestEnhancedGraphWithErrorHandling::test_graph_last_successful_node_tracking", "type": "Coroutine", "lineno": 524}]}, {"nodeid": "tests/test_phase2_error_handling.py", "outcome": "passed", "result": [{"nodeid": "tests/test_phase2_error_handling.py::TestErrorClassification", "type": "Class"}, {"nodeid": "tests/test_phase2_error_handling.py::TestRetryStrategies", "type": "Class"}, {"nodeid": "tests/test_phase2_error_handling.py::TestErrorHandlerIntegration", "type": "Class"}, {"nodeid": "tests/test_phase2_error_handling.py::TestRoutingFunctions", "type": "Class"}, {"nodeid": "tests/test_phase2_error_handling.py::TestEnhancedGraphWithErrorHandling", "type": "Class"}]}, {"nodeid": "tests/test_phase2_fastapi.py", "outcome": "failed", "result": [], "longrepr": "tests/test_phase2_fastapi.py:13: in <module>\n    from main import app\nmain.py:11: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/test_phase3_fastapi.py", "outcome": "failed", "result": [], "longrepr": "tests/test_phase3_fastapi.py:13: in <module>\n    from main import app\nmain.py:11: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/test_phase3_rag_standardization.py", "outcome": "failed", "result": [], "longrepr": ".venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/ast.py:50: in parse\n    return compile(source, filename, mode, flags,\nE     File \"/home/omar/Documents/ruleIQ/tests/test_phase3_rag_standardization.py\", line 148\nE       @pytest.fixture\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_phase3_rag_standardization_simple.py::TestStandardizedRAG", "outcome": "passed", "result": [{"nodeid": "tests/test_phase3_rag_standardization_simple.py::TestStandardizedRAG::test_initialization", "type": "Coroutine", "lineno": 84}, {"nodeid": "tests/test_phase3_rag_standardization_simple.py::TestStandardizedRAG::test_add_documents", "type": "Coroutine", "lineno": 94}, {"nodeid": "tests/test_phase3_rag_standardization_simple.py::TestStandardizedRAG::test_retrieve_documents", "type": "Coroutine", "lineno": 126}, {"nodeid": "tests/test_phase3_rag_standardization_simple.py::TestStandardizedRAG::test_health_check", "type": "Function", "lineno": 157}, {"nodeid": "tests/test_phase3_rag_standardization_simple.py::TestStandardizedRAG::test_clear_collection", "type": "Coroutine", "lineno": 171}, {"nodeid": "tests/test_phase3_rag_standardization_simple.py::TestStandardizedRAG::test_get_statistics", "type": "Coroutine", "lineno": 199}]}, {"nodeid": "tests/test_phase3_rag_standardization_simple.py::TestPerformanceImprovement", "outcome": "passed", "result": [{"nodeid": "tests/test_phase3_rag_standardization_simple.py::TestPerformanceImprovement::test_code_reduction", "type": "Function", "lineno": 215}, {"nodeid": "tests/test_phase3_rag_standardization_simple.py::TestPerformanceImprovement::test_langchain_components_usage", "type": "Function", "lineno": 226}, {"nodeid": "tests/test_phase3_rag_standardization_simple.py::TestPerformanceImprovement::test_simplified_interface", "type": "Function", "lineno": 240}]}, {"nodeid": "tests/test_phase3_rag_standardization_simple.py", "outcome": "passed", "result": [{"nodeid": "tests/test_phase3_rag_standardization_simple.py::TestStandardizedRAG", "type": "Class"}, {"nodeid": "tests/test_phase3_rag_standardization_simple.py::TestPerformanceImprovement", "type": "Class"}]}, {"nodeid": "tests/test_phase4_celery_migration.py::TestComplianceTaskMigration", "outcome": "passed", "result": [{"nodeid": "tests/test_phase4_celery_migration.py::TestComplianceTaskMigration::test_update_compliance_scores", "type": "Coroutine", "lineno": 29}, {"nodeid": "tests/test_phase4_celery_migration.py::TestComplianceTaskMigration::test_check_compliance_alerts", "type": "Coroutine", "lineno": 56}]}, {"nodeid": "tests/test_phase4_celery_migration.py::TestEvidenceTaskMigration", "outcome": "passed", "result": [{"nodeid": "tests/test_phase4_celery_migration.py::TestEvidenceTaskMigration::test_process_evidence_item", "type": "Coroutine", "lineno": 88}, {"nodeid": "tests/test_phase4_celery_migration.py::TestEvidenceTaskMigration::test_sync_evidence_status", "type": "Coroutine", "lineno": 114}]}, {"nodeid": "tests/test_phase4_celery_migration.py::TestNotificationTaskMigration", "outcome": "passed", "result": [{"nodeid": "tests/test_phase4_celery_migration.py::TestNotificationTaskMigration::test_send_compliance_alert", "type": "Coroutine", "lineno": 145}, {"nodeid": "tests/test_phase4_celery_migration.py::TestNotificationTaskMigration::test_send_weekly_summary", "type": "Coroutine", "lineno": 174}, {"nodeid": "tests/test_phase4_celery_migration.py::TestNotificationTaskMigration::test_broadcast_notification", "type": "Coroutine", "lineno": 200}]}, {"nodeid": "tests/test_phase4_celery_migration.py::TestReportingTaskMigration", "outcome": "passed", "result": [{"nodeid": "tests/test_phase4_celery_migration.py::TestReportingTaskMigration::test_generate_and_distribute_report", "type": "Coroutine", "lineno": 234}, {"nodeid": "tests/test_phase4_celery_migration.py::TestReportingTaskMigration::test_cleanup_old_reports", "type": "Coroutine", "lineno": 263}]}, {"nodeid": "tests/test_phase4_celery_migration.py::TestMonitoringTaskMigration", "outcome": "passed", "result": [{"nodeid": "tests/test_phase4_celery_migration.py::TestMonitoringTaskMigration::test_collect_database_metrics", "type": "Coroutine", "lineno": 294}, {"nodeid": "tests/test_phase4_celery_migration.py::TestMonitoringTaskMigration::test_system_metrics_collection", "type": "Coroutine", "lineno": 321}]}, {"nodeid": "tests/test_phase4_celery_migration.py::TestUnifiedOrchestrator", "outcome": "passed", "result": [{"nodeid": "tests/test_phase4_celery_migration.py::TestUnifiedOrchestrator::test_graph_initialization", "type": "Coroutine", "lineno": 353}, {"nodeid": "tests/test_phase4_celery_migration.py::TestUnifiedOrchestrator::test_task_routing", "type": "Coroutine", "lineno": 364}, {"nodeid": "tests/test_phase4_celery_migration.py::TestUnifiedOrchestrator::test_execute_compliance_task_through_graph", "type": "Coroutine", "lineno": 389}, {"nodeid": "tests/test_phase4_celery_migration.py::TestUnifiedOrchestrator::test_execute_monitoring_task_through_graph", "type": "Coroutine", "lineno": 402}, {"nodeid": "tests/test_phase4_celery_migration.py::TestUnifiedOrchestrator::test_task_retry_on_failure", "type": "Coroutine", "lineno": 415}, {"nodeid": "tests/test_phase4_celery_migration.py::TestUnifiedOrchestrator::test_scheduler_registration", "type": "Coroutine", "lineno": 441}, {"nodeid": "tests/test_phase4_celery_migration.py::TestUnifiedOrchestrator::test_task_statistics", "type": "Coroutine", "lineno": 450}, {"nodeid": "tests/test_phase4_celery_migration.py::TestUnifiedOrchestrator::test_end_to_end_workflow", "type": "Coroutine", "lineno": 465}]}, {"nodeid": "tests/test_phase4_celery_migration.py::TestMigrationCompleteness", "outcome": "passed", "result": [{"nodeid": "tests/test_phase4_celery_migration.py::TestMigrationCompleteness::test_all_celery_tasks_migrated", "type": "Coroutine", "lineno": 491}, {"nodeid": "tests/test_phase4_celery_migration.py::TestMigrationCompleteness::test_periodic_task_coverage", "type": "Coroutine", "lineno": 527}, {"nodeid": "tests/test_phase4_celery_migration.py::TestMigrationCompleteness::test_factory_function", "type": "Coroutine", "lineno": 548}]}, {"nodeid": "tests/test_phase4_celery_migration.py", "outcome": "passed", "result": [{"nodeid": "tests/test_phase4_celery_migration.py::TestComplianceTaskMigration", "type": "Class"}, {"nodeid": "tests/test_phase4_celery_migration.py::TestEvidenceTaskMigration", "type": "Class"}, {"nodeid": "tests/test_phase4_celery_migration.py::TestNotificationTaskMigration", "type": "Class"}, {"nodeid": "tests/test_phase4_celery_migration.py::TestReportingTaskMigration", "type": "Class"}, {"nodeid": "tests/test_phase4_celery_migration.py::TestMonitoringTaskMigration", "type": "Class"}, {"nodeid": "tests/test_phase4_celery_migration.py::TestUnifiedOrchestrator", "type": "Class"}, {"nodeid": "tests/test_phase4_celery_migration.py::TestMigrationCompleteness", "type": "Class"}]}, {"nodeid": "tests/test_rag_critic.py", "outcome": "passed", "result": [{"nodeid": "tests/test_rag_critic.py::test_rag_critic_system", "type": "Coroutine", "lineno": 18}]}, {"nodeid": "tests/test_rag_processing.py", "outcome": "passed", "result": [{"nodeid": "tests/test_rag_processing.py::test_rag_processing", "type": "Coroutine", "lineno": 18}]}, {"nodeid": "tests/test_rbac_system.py::TestClient", "outcome": "passed", "result": []}, {"nodeid": "tests/test_rbac_system.py::TestRBACModels", "outcome": "passed", "result": [{"nodeid": "tests/test_rbac_system.py::TestRBACModels::test_role_model_creation", "type": "Function", "lineno": 32}, {"nodeid": "tests/test_rbac_system.py::TestRBACModels::test_permission_model_creation", "type": "Function", "lineno": 49}, {"nodeid": "tests/test_rbac_system.py::TestRBACModels::test_user_role_assignment", "type": "Function", "lineno": 66}, {"nodeid": "tests/test_rbac_system.py::TestRBACModels::test_role_permission_assignment", "type": "Function", "lineno": 99}, {"nodeid": "tests/test_rbac_system.py::TestRBACModels::test_framework_access_model", "type": "Function", "lineno": 125}]}, {"nodeid": "tests/test_rbac_system.py::TestRBACService", "outcome": "passed", "result": [{"nodeid": "tests/test_rbac_system.py::TestRBACService::test_assign_role_to_user", "type": "Function", "lineno": 211}, {"nodeid": "tests/test_rbac_system.py::TestRBACService::test_get_user_roles", "type": "Function", "lineno": 225}, {"nodeid": "tests/test_rbac_system.py::TestRBACService::test_get_user_permissions", "type": "Function", "lineno": 242}, {"nodeid": "tests/test_rbac_system.py::TestRBACService::test_user_has_permission", "type": "Function", "lineno": 259}, {"nodeid": "tests/test_rbac_system.py::TestRBACService::test_revoke_role_from_user", "type": "Function", "lineno": 274}, {"nodeid": "tests/test_rbac_system.py::TestRBACService::test_expired_role_cleanup", "type": "Function", "lineno": 297}]}, {"nodeid": "tests/test_rbac_system.py::TestUserWithRoles", "outcome": "passed", "result": [{"nodeid": "tests/test_rbac_system.py::TestUserWithRoles::test_has_permission", "type": "Function", "lineno": 344}, {"nodeid": "tests/test_rbac_system.py::TestUserWithRoles::test_has_any_permission", "type": "Function", "lineno": 350}, {"nodeid": "tests/test_rbac_system.py::TestUserWithRoles::test_has_all_permissions", "type": "Function", "lineno": 356}, {"nodeid": "tests/test_rbac_system.py::TestUserWithRoles::test_has_role", "type": "Function", "lineno": 362}, {"nodeid": "tests/test_rbac_system.py::TestUserWithRoles::test_has_any_role", "type": "Function", "lineno": 368}, {"nodeid": "tests/test_rbac_system.py::TestUserWithRoles::test_can_access_framework", "type": "Function", "lineno": 374}, {"nodeid": "tests/test_rbac_system.py::TestUserWithRoles::test_to_dict", "type": "Function", "lineno": 386}]}, {"nodeid": "tests/test_rbac_system.py::TestRBACAuthentication", "outcome": "passed", "result": [{"nodeid": "tests/test_rbac_system.py::TestRBACAuthentication::test_create_access_token_with_roles", "type": "Function", "lineno": 405}, {"nodeid": "tests/test_rbac_system.py::TestRBACAuthentication::test_require_permission_decorator", "type": "Coroutine", "lineno": 426}, {"nodeid": "tests/test_rbac_system.py::TestRBACAuthentication::test_require_any_permission_decorator", "type": "Coroutine", "lineno": 456}]}, {"nodeid": "tests/test_rbac_system.py::TestRBACMiddleware", "outcome": "passed", "result": [{"nodeid": "tests/test_rbac_system.py::TestRBACMiddleware::test_is_public_route", "type": "Function", "lineno": 500}, {"nodeid": "tests/test_rbac_system.py::TestRBACMiddleware::test_is_authenticated_only_route", "type": "Function", "lineno": 508}, {"nodeid": "tests/test_rbac_system.py::TestRBACMiddleware::test_get_required_permissions", "type": "Function", "lineno": 514}]}, {"nodeid": "tests/test_rbac_system.py::TestRBACIntegration", "outcome": "passed", "result": [{"nodeid": "tests/test_rbac_system.py::TestRBACIntegration::test_end_to_end_rbac_flow", "type": "Coroutine", "lineno": 533}]}, {"nodeid": "tests/test_rbac_system.py", "outcome": "passed", "result": [{"nodeid": "tests/test_rbac_system.py::TestClient", "type": "Class"}, {"nodeid": "tests/test_rbac_system.py::TestRBACModels", "type": "Class"}, {"nodeid": "tests/test_rbac_system.py::TestRBACService", "type": "Class"}, {"nodeid": "tests/test_rbac_system.py::TestUserWithRoles", "type": "Class"}, {"nodeid": "tests/test_rbac_system.py::TestRBACAuthentication", "type": "Class"}, {"nodeid": "tests/test_rbac_system.py::TestRBACMiddleware", "type": "Class"}, {"nodeid": "tests/test_rbac_system.py::TestRBACIntegration", "type": "Class"}]}, {"nodeid": "tests/test_sanity_check.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_security.py::TestInputValidation", "outcome": "passed", "result": [{"nodeid": "tests/test_security.py::TestInputValidation::test_sql_injection_prevention", "type": "Function", "lineno": 20}, {"nodeid": "tests/test_security.py::TestInputValidation::test_xss_prevention", "type": "Function", "lineno": 37}, {"nodeid": "tests/test_security.py::TestInputValidation::test_command_injection_prevention", "type": "Function", "lineno": 53}, {"nodeid": "tests/test_security.py::TestInputValidation::test_path_traversal_prevention", "type": "Function", "lineno": 72}]}, {"nodeid": "tests/test_security.py::TestAuthentication", "outcome": "passed", "result": [{"nodeid": "tests/test_security.py::TestAuthentication::test_unauthenticated_access_blocked", "type": "Function", "lineno": 84}, {"nodeid": "tests/test_security.py::TestAuthentication::test_invalid_token_rejected", "type": "Function", "lineno": 97}, {"nodeid": "tests/test_security.py::TestAuthentication::test_token_expiry_enforcement", "type": "Function", "lineno": 112}, {"nodeid": "tests/test_security.py::TestAuthentication::test_password_complexity_requirements", "type": "Function", "lineno": 125}]}, {"nodeid": "tests/test_security.py::TestAuthorization", "outcome": "passed", "result": [{"nodeid": "tests/test_security.py::TestAuthorization::test_role_based_access_control", "type": "Function", "lineno": 152}]}, {"nodeid": "tests/test_security.py::TestDataProtection", "outcome": "passed", "result": [{"nodeid": "tests/test_security.py::TestDataProtection::test_sensitive_data_not_in_logs", "type": "Function", "lineno": 200}, {"nodeid": "tests/test_security.py::TestDataProtection::test_password_hashing", "type": "Function", "lineno": 214}, {"nodeid": "tests/test_security.py::TestDataProtection::test_pii_encryption_at_rest", "type": "Function", "lineno": 228}, {"nodeid": "tests/test_security.py::TestDataProtection::test_secure_headers_present", "type": "Function", "lineno": 234}]}, {"nodeid": "tests/test_security.py::TestRateLimiting", "outcome": "passed", "result": [{"nodeid": "tests/test_security.py::TestRateLimiting::test_rate_limiting_enforcement", "type": "Function", "lineno": 252}, {"nodeid": "tests/test_security.py::TestRateLimiting::test_rate_limiting_per_user", "type": "Function", "lineno": 269}]}, {"nodeid": "tests/test_security.py::TestAPISecurity", "outcome": "passed", "result": [{"nodeid": "tests/test_security.py::TestAPISecurity::test_cors_configuration", "type": "Function", "lineno": 288}, {"nodeid": "tests/test_security.py::TestAPISecurity::test_api_versioning_security", "type": "Function", "lineno": 303}, {"nodeid": "tests/test_security.py::TestAPISecurity::test_information_disclosure_prevention", "type": "Function", "lineno": 314}]}, {"nodeid": "tests/test_security.py::TestPenetrationTesting", "outcome": "passed", "result": [{"nodeid": "tests/test_security.py::TestPenetrationTesting::test_automated_vulnerability_scan", "type": "Function", "lineno": 342}, {"nodeid": "tests/test_security.py::TestPenetrationTesting::test_business_logic_vulnerabilities", "type": "Function", "lineno": 372}]}, {"nodeid": "tests/test_security.py", "outcome": "passed", "result": [{"nodeid": "tests/test_security.py::TestInputValidation", "type": "Class"}, {"nodeid": "tests/test_security.py::TestAuthentication", "type": "Class"}, {"nodeid": "tests/test_security.py::TestAuthorization", "type": "Class"}, {"nodeid": "tests/test_security.py::TestDataProtection", "type": "Class"}, {"nodeid": "tests/test_security.py::TestRateLimiting", "type": "Class"}, {"nodeid": "tests/test_security.py::TestAPISecurity", "type": "Class"}, {"nodeid": "tests/test_security.py::TestPenetrationTesting", "type": "Class"}]}, {"nodeid": "tests/test_services.py::TestBusinessService", "outcome": "passed", "result": [{"nodeid": "tests/test_services.py::TestBusinessService::test_create_business_profile_valid_data", "type": "Coroutine", "lineno": 48}, {"nodeid": "tests/test_services.py::TestBusinessService::test_create_business_profile_invalid_data", "type": "Coroutine", "lineno": 89}, {"nodeid": "tests/test_services.py::TestBusinessService::test_get_business_profile_exists", "type": "Coroutine", "lineno": 118}, {"nodeid": "tests/test_services.py::TestBusinessService::test_get_business_profile_not_exists", "type": "Coroutine", "lineno": 145}, {"nodeid": "tests/test_services.py::TestBusinessService::test_update_assessment_details", "type": "Coroutine", "lineno": 180}, {"nodeid": "tests/test_services.py::TestBusinessService::test_get_supported_options", "type": "Function", "lineno": 223}]}, {"nodeid": "tests/test_services.py::TestAssessmentService", "outcome": "passed", "result": [{"nodeid": "tests/test_services.py::TestAssessmentService::test_start_assessment_session", "type": "Coroutine", "lineno": 250}, {"nodeid": "tests/test_services.py::TestAssessmentService::test_update_assessment_response", "type": "Coroutine", "lineno": 284}, {"nodeid": "tests/test_services.py::TestAssessmentService::test_complete_assessment_session_generates_recommendations", "type": "Coroutine", "lineno": 322}, {"nodeid": "tests/test_services.py::TestAssessmentService::test_calculate_compliance_score", "type": "Coroutine", "lineno": 365}]}, {"nodeid": "tests/test_services.py::TestPolicyService", "outcome": "passed", "result": [{"nodeid": "tests/test_services.py::TestPolicyService::test_generate_policy_with_ai", "type": "Coroutine", "lineno": 400}]}, {"nodeid": "tests/test_services.py::TestFrameworkService", "outcome": "passed", "result": [{"nodeid": "tests/test_services.py::TestFrameworkService::test_recommend_frameworks", "type": "Coroutine", "lineno": 517}, {"nodeid": "tests/test_services.py::TestFrameworkService::test_calculate_framework_relevance", "type": "Coroutine", "lineno": 558}, {"nodeid": "tests/test_services.py::TestFrameworkService::test_get_framework_requirements", "type": "Coroutine", "lineno": 590}]}, {"nodeid": "tests/test_services.py::TestImplementationService", "outcome": "passed", "result": [{"nodeid": "tests/test_services.py::TestImplementationService::test_generate_implementation_plan", "type": "Coroutine", "lineno": 656}, {"nodeid": "tests/test_services.py::TestImplementationService::test_update_task_progress", "type": "Coroutine", "lineno": 697}]}, {"nodeid": "tests/test_services.py::TestEvidenceService", "outcome": "passed", "result": [{"nodeid": "tests/test_services.py::TestEvidenceService::test_identify_evidence_requirements", "type": "Coroutine", "lineno": 794}, {"nodeid": "tests/test_services.py::TestEvidenceService::test_configure_automated_collection", "type": "Coroutine", "lineno": 828}, {"nodeid": "tests/test_services.py::TestEvidenceService::test_validate_evidence_quality", "type": "Coroutine", "lineno": 854}]}, {"nodeid": "tests/test_services.py::TestReadinessService", "outcome": "passed", "result": [{"nodeid": "tests/test_services.py::TestReadinessService::test_calculate_overall_readiness", "type": "Coroutine", "lineno": 889}, {"nodeid": "tests/test_services.py::TestReadinessService::test_identify_compliance_gaps", "type": "Coroutine", "lineno": 925}, {"nodeid": "tests/test_services.py::TestReadinessService::test_generate_executive_summary", "type": "Coroutine", "lineno": 961}]}, {"nodeid": "tests/test_services.py", "outcome": "passed", "result": [{"nodeid": "tests/test_services.py::TestBusinessService", "type": "Class"}, {"nodeid": "tests/test_services.py::TestAssessmentService", "type": "Class"}, {"nodeid": "tests/test_services.py::TestPolicyService", "type": "Class"}, {"nodeid": "tests/test_services.py::TestFrameworkService", "type": "Class"}, {"nodeid": "tests/test_services.py::TestImplementationService", "type": "Class"}, {"nodeid": "tests/test_services.py::TestEvidenceService", "type": "Class"}, {"nodeid": "tests/test_services.py::TestReadinessService", "type": "Class"}]}, {"nodeid": "tests/test_settings.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_simple_settings.py::TestSettings", "outcome": "passed", "result": []}, {"nodeid": "tests/test_simple_settings.py", "outcome": "passed", "result": [{"nodeid": "tests/test_simple_settings.py::TestSettings", "type": "Class"}]}, {"nodeid": "tests/test_sprint_management.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/test_sprint_management.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/test_sprint_management.py:16: in <module>\n    from sprint_management import (\nE   ModuleNotFoundError: No module named 'sprint_management'"}, {"nodeid": "tests/test_stack_auth.py", "outcome": "passed", "result": [{"nodeid": "tests/test_stack_auth.py::test_stack_auth", "type": "Coroutine", "lineno": 16}]}, {"nodeid": "tests/test_state_management.py::TestScenario", "outcome": "passed", "result": []}, {"nodeid": "tests/test_state_management.py::TestStateInitialization", "outcome": "passed", "result": [{"nodeid": "tests/test_state_management.py::TestStateInitialization::test_state_initialization", "type": "Function", "lineno": 36}, {"nodeid": "tests/test_state_management.py::TestStateInitialization::test_state_builder_pattern", "type": "Function", "lineno": 59}, {"nodeid": "tests/test_state_management.py::TestStateInitialization::test_test_scenario_states", "type": "Function", "lineno": 83}]}, {"nodeid": "tests/test_state_management.py::TestStateTransitions", "outcome": "passed", "result": [{"nodeid": "tests/test_state_management.py::TestStateTransitions::test_state_transitions", "type": "Function", "lineno": 103}, {"nodeid": "tests/test_state_management.py::TestStateTransitions::test_error_state_transition", "type": "Function", "lineno": 120}, {"nodeid": "tests/test_state_management.py::TestStateTransitions::test_recovery_from_error", "type": "Function", "lineno": 137}]}, {"nodeid": "tests/test_state_management.py::TestStateReducers", "outcome": "passed", "result": [{"nodeid": "tests/test_state_management.py::TestStateReducers::test_merge_tool_outputs", "type": "Function", "lineno": 160}, {"nodeid": "tests/test_state_management.py::TestStateReducers::test_accumulate_errors", "type": "Function", "lineno": 182}, {"nodeid": "tests/test_state_management.py::TestStateReducers::test_merge_compliance_data", "type": "Function", "lineno": 203}, {"nodeid": "tests/test_state_management.py::TestStateReducers::test_increment_counter", "type": "Function", "lineno": 233}, {"nodeid": "tests/test_state_management.py::TestStateReducers::test_update_metadata", "type": "Function", "lineno": 239}]}, {"nodeid": "tests/test_state_management.py::TestStatePersistence", "outcome": "passed", "result": [{"nodeid": "tests/test_state_management.py::TestStatePersistence::test_state_persistence", "type": "Coroutine", "lineno": 265}, {"nodeid": "tests/test_state_management.py::TestStatePersistence::test_state_recovery_after_failure", "type": "Coroutine", "lineno": 272}, {"nodeid": "tests/test_state_management.py::TestStatePersistence::test_state_serialization", "type": "Function", "lineno": 278}]}, {"nodeid": "tests/test_state_management.py::TestStateValidation", "outcome": "passed", "result": [{"nodeid": "tests/test_state_management.py::TestStateValidation::test_required_fields_validation", "type": "Function", "lineno": 297}, {"nodeid": "tests/test_state_management.py::TestStateValidation::test_status_transitions_validity", "type": "Function", "lineno": 318}, {"nodeid": "tests/test_state_management.py::TestStateValidation::test_retry_count_limits", "type": "Function", "lineno": 339}]}, {"nodeid": "tests/test_state_management.py::TestBatchStateOperations", "outcome": "passed", "result": [{"nodeid": "tests/test_state_management.py::TestBatchStateOperations::test_batch_state_creation", "type": "Function", "lineno": 358}, {"nodeid": "tests/test_state_management.py::TestBatchStateOperations::test_parallel_state_processing", "type": "Function", "lineno": 372}]}, {"nodeid": "tests/test_state_management.py::TestStateIntegration", "outcome": "passed", "result": [{"nodeid": "tests/test_state_management.py::TestStateIntegration::test_state_with_langgraph", "type": "Coroutine", "lineno": 393}]}, {"nodeid": "tests/test_state_management.py", "outcome": "passed", "result": [{"nodeid": "tests/test_state_management.py::TestScenario", "type": "Class"}, {"nodeid": "tests/test_state_management.py::TestStateInitialization", "type": "Class"}, {"nodeid": "tests/test_state_management.py::TestStateTransitions", "type": "Class"}, {"nodeid": "tests/test_state_management.py::TestStateReducers", "type": "Class"}, {"nodeid": "tests/test_state_management.py::TestStatePersistence", "type": "Class"}, {"nodeid": "tests/test_state_management.py::TestStateValidation", "type": "Class"}, {"nodeid": "tests/test_state_management.py::TestBatchStateOperations", "type": "Class"}, {"nodeid": "tests/test_state_management.py::TestStateIntegration", "type": "Class"}]}, {"nodeid": "tests/test_supabase_rag.py", "outcome": "passed", "result": [{"nodeid": "tests/test_supabase_rag.py::test_supabase_rag", "type": "Coroutine", "lineno": 18}]}, {"nodeid": "tests/test_uk_compliance_frameworks.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/omar/Documents/ruleIQ/tests/test_uk_compliance_frameworks.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.11/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n../../.local/share/uv/python/cpython-3.11.9-linux-x86_64-gnu/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n.venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/test_uk_compliance_frameworks.py:9: in <module>\n    from database.models.compliance_framework import ComplianceFramework\nE   ModuleNotFoundError: No module named 'database.models.compliance_framework'"}, {"nodeid": "tests/test_usability.py::TestUserOnboardingFlow", "outcome": "passed", "result": [{"nodeid": "tests/test_usability.py::TestUserOnboardingFlow::test_registration_simplicity", "type": "Function", "lineno": 14}, {"nodeid": "tests/test_usability.py::TestUserOnboardingFlow::test_business_profile_guided_creation", "type": "Function", "lineno": 33}, {"nodeid": "tests/test_usability.py::TestUserOnboardingFlow::test_assessment_question_clarity", "type": "Function", "lineno": 49}]}, {"nodeid": "tests/test_usability.py::TestNavigationAndWorkflow", "outcome": "passed", "result": [{"nodeid": "tests/test_usability.py::TestNavigationAndWorkflow::test_dashboard_information_hierarchy", "type": "Function", "lineno": 86}, {"nodeid": "tests/test_usability.py::TestNavigationAndWorkflow::test_compliance_journey_breadcrumbs", "type": "Function", "lineno": 112}, {"nodeid": "tests/test_usability.py::TestNavigationAndWorkflow::test_action_feedback_and_confirmation", "type": "Function", "lineno": 138}]}, {"nodeid": "tests/test_usability.py::TestContentReadabilityAndClarity", "outcome": "passed", "result": [{"nodeid": "tests/test_usability.py::TestContentReadabilityAndClarity::test_policy_content_readability", "type": "Function", "lineno": 170}, {"nodeid": "tests/test_usability.py::TestContentReadabilityAndClarity::test_recommendation_clarity", "type": "Function", "lineno": 206}, {"nodeid": "tests/test_usability.py::TestContentReadabilityAndClarity::test_error_message_helpfulness", "type": "Function", "lineno": 242}]}, {"nodeid": "tests/test_usability.py::TestAccessibilityAndInclusion", "outcome": "passed", "result": [{"nodeid": "tests/test_usability.py::TestAccessibilityAndInclusion::test_api_response_structure_consistency", "type": "Function", "lineno": 328}, {"nodeid": "tests/test_usability.py::TestAccessibilityAndInclusion::test_internationalization_support", "type": "Function", "lineno": 352}, {"nodeid": "tests/test_usability.py::TestAccessibilityAndInclusion::test_mobile_friendly_response_structure", "type": "Function", "lineno": 391}]}, {"nodeid": "tests/test_usability.py::TestUserGuidanceAndHelp", "outcome": "passed", "result": [{"nodeid": "tests/test_usability.py::TestUserGuidanceAndHelp::test_contextual_help_availability", "type": "Function", "lineno": 417}, {"nodeid": "tests/test_usability.py::TestUserGuidanceAndHelp::test_progress_indicators_and_motivation", "type": "Function", "lineno": 431}, {"nodeid": "tests/test_usability.py::TestUserGuidanceAndHelp::test_workflow_guidance_and_next_steps", "type": "Function", "lineno": 463}, {"nodeid": "tests/test_usability.py::TestUserGuidanceAndHelp::test_complexity_progressive_disclosure", "type": "Function", "lineno": 484}]}, {"nodeid": "tests/test_usability.py::TestUserWorkflowEfficiency", "outcome": "passed", "result": [{"nodeid": "tests/test_usability.py::TestUserWorkflowEfficiency::test_bulk_operations_support", "type": "Function", "lineno": 529}, {"nodeid": "tests/test_usability.py::TestUserWorkflowEfficiency::test_quick_actions_availability", "type": "Function", "lineno": 547}, {"nodeid": "tests/test_usability.py::TestUserWorkflowEfficiency::test_save_and_resume_functionality", "type": "Function", "lineno": 570}]}, {"nodeid": "tests/test_usability.py", "outcome": "passed", "result": [{"nodeid": "tests/test_usability.py::TestUserOnboardingFlow", "type": "Class"}, {"nodeid": "tests/test_usability.py::TestNavigationAndWorkflow", "type": "Class"}, {"nodeid": "tests/test_usability.py::TestContentReadabilityAndClarity", "type": "Class"}, {"nodeid": "tests/test_usability.py::TestAccessibilityAndInclusion", "type": "Class"}, {"nodeid": "tests/test_usability.py::TestUserGuidanceAndHelp", "type": "Class"}, {"nodeid": "tests/test_usability.py::TestUserWorkflowEfficiency", "type": "Class"}]}, {"nodeid": "tests/test_validation.py", "outcome": "passed", "result": [{"nodeid": "tests/test_validation.py::test_basic_functionality", "type": "Function", "lineno": 4}, {"nodeid": "tests/test_validation.py::test_environment_setup", "type": "Function", "lineno": 8}, {"nodeid": "tests/test_validation.py::test_unit_marker", "type": "Function", "lineno": 12}, {"nodeid": "tests/test_validation.py::test_python_path", "type": "Function", "lineno": 17}, {"nodeid": "tests/test_validation.py::test_imports_work", "type": "Function", "lineno": 23}]}, {"nodeid": "tests/testsprite_generated/test_authentication_testsprite.py", "outcome": "failed", "result": [], "longrepr": "tests/testsprite_generated/test_authentication_testsprite.py:9: in <module>\n    from main import app\nmain.py:11: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/testsprite_generated/test_frontend_testsprite.py", "outcome": "failed", "result": [], "longrepr": "tests/testsprite_generated/test_frontend_testsprite.py:7: in <module>\n    from main import app\nmain.py:11: in <module>\n    from api.routers import (\napi/routers/ai_assessments.py:49: in <module>\n    router = APIRouter(prefix=\"/api/v1/\", tags=[\"AI Assessment Assistant\"])\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/fastapi/routing.py:848: in __init__\n    assert not prefix.endswith(\"/\"), (\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: A path prefix must not end with '/', as the routes will start with '/'"}, {"nodeid": "tests/testsprite_generated", "outcome": "passed", "result": [{"nodeid": "tests/testsprite_generated/test_authentication_testsprite.py", "type": "Module"}, {"nodeid": "tests/testsprite_generated/test_frontend_testsprite.py", "type": "Module"}]}, {"nodeid": "tests/unit/models", "outcome": "passed", "result": []}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant::test_process_message_compliance_question", "type": "Coroutine", "lineno": 22}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant::test_process_message_out_of_scope", "type": "Coroutine", "lineno": 79}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant::test_get_evidence_recommendations", "type": "Coroutine", "lineno": 137}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant::test_classify_user_intent_evidence_guidance", "type": "Function", "lineno": 195}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant::test_generate_contextual_response_with_business_context", "type": "Coroutine", "lineno": 220}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant::test_handle_adversarial_input", "type": "Function", "lineno": 256}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant::test_validate_response_safety", "type": "Function", "lineno": 280}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant::test_extract_compliance_entities", "type": "Function", "lineno": 316}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant::test_generate_follow_up_suggestions", "type": "Function", "lineno": 337}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant::test_async_message_processing", "type": "Coroutine", "lineno": 361}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant::test_rate_limit_handling", "type": "Function", "lineno": 401}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant::test_conversation_context_management", "type": "Function", "lineno": 423}]}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestAIResponseValidation", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_assistant.py::TestAIResponseValidation::test_validate_compliance_accuracy", "type": "Function", "lineno": 455}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestAIResponseValidation::test_detect_hallucination", "type": "Function", "lineno": 485}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestAIResponseValidation::test_compliance_tone_validation", "type": "Function", "lineno": 506}]}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestAIEnhancements", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_assistant.py::TestAIEnhancements::test_analyze_evidence_gap", "type": "Coroutine", "lineno": 547}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestAIEnhancements::test_analyze_evidence_gap_fallback", "type": "Coroutine", "lineno": 614}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestAIEnhancements::test_get_evidence_types_summary", "type": "Function", "lineno": 657}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestAIEnhancements::test_is_recent_activity", "type": "Function", "lineno": 676}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestAIEnhancements::test_format_recommendations", "type": "Function", "lineno": 696}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestAIEnhancements::test_get_main_prompt", "type": "Function", "lineno": 719}]}, {"nodeid": "tests/unit/services/test_ai_assistant.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_assistant.py::TestComplianceAssistant", "type": "Class"}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestAIResponseValidation", "type": "Class"}, {"nodeid": "tests/unit/services/test_ai_assistant.py::TestAIEnhancements", "type": "Class"}]}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIResponseCache", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIResponseCache::test_cache_key_generation", "type": "Coroutine", "lineno": 30}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIResponseCache::test_content_type_classification", "type": "Coroutine", "lineno": 48}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIResponseCache::test_intelligent_ttl_calculation", "type": "Coroutine", "lineno": 67}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIResponseCache::test_cache_response_success", "type": "Coroutine", "lineno": 83}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIResponseCache::test_get_cached_response_hit", "type": "Coroutine", "lineno": 98}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIResponseCache::test_get_cached_response_miss", "type": "Coroutine", "lineno": 114}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIResponseCache::test_cache_metrics", "type": "Coroutine", "lineno": 125}]}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIPerformanceOptimizer", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIPerformanceOptimizer::test_prompt_optimization", "type": "Coroutine", "lineno": 151}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIPerformanceOptimizer::test_optimization_strategy_selection", "type": "Function", "lineno": 165}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIPerformanceOptimizer::test_rate_limiting", "type": "Coroutine", "lineno": 179}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIPerformanceOptimizer::test_performance_metrics_update", "type": "Coroutine", "lineno": 194}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIPerformanceOptimizer::test_concurrent_request_optimization", "type": "Coroutine", "lineno": 206}]}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIAnalyticsMonitor", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIAnalyticsMonitor::test_metric_recording", "type": "Coroutine", "lineno": 228}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIAnalyticsMonitor::test_alert_creation", "type": "Coroutine", "lineno": 245}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIAnalyticsMonitor::test_real_time_metrics", "type": "Coroutine", "lineno": 265}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIAnalyticsMonitor::test_usage_analytics", "type": "Coroutine", "lineno": 282}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIAnalyticsMonitor::test_cost_analytics", "type": "Coroutine", "lineno": 300}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIAnalyticsMonitor::test_alert_resolution", "type": "Coroutine", "lineno": 314}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIAnalyticsMonitor::test_dashboard_data_compilation", "type": "Coroutine", "lineno": 329}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIAnalyticsMonitor::test_health_status_calculation", "type": "Function", "lineno": 345}]}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestSmartEvidenceCollector", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestSmartEvidenceCollector::test_evidence_requirements_generation", "type": "Coroutine", "lineno": 372}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestSmartEvidenceCollector::test_evidence_gap_analysis", "type": "Function", "lineno": 387}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestSmartEvidenceCollector::test_task_priority_calculation", "type": "Function", "lineno": 404}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestSmartEvidenceCollector::test_effort_estimation", "type": "Function", "lineno": 425}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestSmartEvidenceCollector::test_collection_plan_creation", "type": "Coroutine", "lineno": 449}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestSmartEvidenceCollector::test_task_status_update", "type": "Coroutine", "lineno": 472}]}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestQualityMonitor", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestQualityMonitor::test_response_quality_assessment", "type": "Coroutine", "lineno": 506}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestQualityMonitor::test_accuracy_scoring", "type": "Function", "lineno": 536}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestQualityMonitor::test_relevance_scoring", "type": "Function", "lineno": 557}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestQualityMonitor::test_user_feedback_incorporation", "type": "Function", "lineno": 571}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestQualityMonitor::test_quality_level_determination", "type": "Function", "lineno": 605}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestQualityMonitor::test_improvement_suggestions_generation", "type": "Function", "lineno": 622}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestQualityMonitor::test_quality_trends_calculation", "type": "Coroutine", "lineno": 641}]}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIResponseCache", "type": "Class"}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIPerformanceOptimizer", "type": "Class"}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestAIAnalyticsMonitor", "type": "Class"}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestSmartEvidenceCollector", "type": "Class"}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py::TestQualityMonitor", "type": "Class"}]}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_circuit_breaker_initialization", "type": "Function", "lineno": 37}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_model_availability_when_closed", "type": "Function", "lineno": 44}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_record_success", "type": "Function", "lineno": 49}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_record_failure", "type": "Function", "lineno": 59}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_circuit_opens_after_threshold_failures", "type": "Function", "lineno": 70}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_circuit_transitions_to_half_open", "type": "Function", "lineno": 82}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_circuit_closes_after_successful_half_open", "type": "Function", "lineno": 100}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_synchronous_call_with_circuit_breaker", "type": "Function", "lineno": 121}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_asynchronous_call_with_circuit_breaker", "type": "Coroutine", "lineno": 133}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_circuit_breaker_blocks_when_open", "type": "Function", "lineno": 148}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_async_circuit_breaker_blocks_when_open", "type": "Coroutine", "lineno": 165}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_multiple_models_independent_circuits", "type": "Function", "lineno": 183}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_failure_cleanup", "type": "Function", "lineno": 199}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_circuit_breaker_metrics", "type": "Function", "lineno": 218}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_get_circuit_breaker_status", "type": "Function", "lineno": 234}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_manual_circuit_reset", "type": "Function", "lineno": 248}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker::test_health_check_integration", "type": "Function", "lineno": 265}]}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_circuit_breaker.py::TestAICircuitBreaker", "type": "Class"}]}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelMetadata", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelMetadata::test_model_metadata_creation", "type": "Function", "lineno": 25}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelMetadata::test_efficiency_score_calculation", "type": "Function", "lineno": 42}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelMetadata::test_efficiency_score_zero_cost", "type": "Function", "lineno": 66}]}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelType", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelType::test_model_type_values", "type": "Function", "lineno": 83}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelType::test_fallback_chain_order", "type": "Function", "lineno": 90}]}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestAIConfig", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_model_selection.py::TestAIConfig::test_ai_config_initialization", "type": "Function", "lineno": 110}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestAIConfig::test_get_model_metadata", "type": "Function", "lineno": 116}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestAIConfig::test_get_optimal_model_simple_task", "type": "Function", "lineno": 125}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestAIConfig::test_get_optimal_model_complex_task", "type": "Function", "lineno": 137}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestAIConfig::test_get_optimal_model_with_context", "type": "Function", "lineno": 144}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestAIConfig::test_calculate_task_complexity_auto", "type": "Function", "lineno": 158}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestAIConfig::test_get_model_success", "type": "Function", "lineno": 170}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestAIConfig::test_get_model_with_fallback", "type": "Function", "lineno": 188}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestAIConfig::test_model_selection_prefer_speed", "type": "Function", "lineno": 207}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestAIConfig::test_model_selection_prefer_capability", "type": "Function", "lineno": 215}]}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestGetAIModel", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_model_selection.py::TestGetAIModel::test_get_ai_model_default", "type": "Function", "lineno": 227}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestGetAIModel::test_get_ai_model_specific_type", "type": "Function", "lineno": 240}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestGetAIModel::test_get_ai_model_with_task_context", "type": "Function", "lineno": 254}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestGetAIModel::test_get_ai_model_fallback_on_error", "type": "Function", "lineno": 270}]}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelMetadataIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelMetadataIntegration::test_all_models_have_metadata", "type": "Function", "lineno": 290}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelMetadataIntegration::test_metadata_consistency", "type": "Function", "lineno": 299}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelMetadataIntegration::test_fallback_chain_metadata_ordering", "type": "Function", "lineno": 318}]}, {"nodeid": "tests/unit/services/test_ai_model_selection.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelMetadata", "type": "Class"}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelType", "type": "Class"}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestAIConfig", "type": "Class"}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestGetAIModel", "type": "Class"}, {"nodeid": "tests/unit/services/test_ai_model_selection.py::TestModelMetadataIntegration", "type": "Class"}]}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming::test_stream_response_basic", "type": "Coroutine", "lineno": 110}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming::test_stream_response_with_complex_structure", "type": "Coroutine", "lineno": 132}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming::test_stream_response_circuit_breaker_open", "type": "Coroutine", "lineno": 156}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming::test_stream_response_model_error", "type": "Coroutine", "lineno": 176}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming::test_stream_response_task_context", "type": "Coroutine", "lineno": 196}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming::test_analyze_assessment_results_stream", "type": "Coroutine", "lineno": 225}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming::test_get_assessment_recommendations_stream", "type": "Coroutine", "lineno": 255}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming::test_get_assessment_help_stream", "type": "Coroutine", "lineno": 287}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming::test_streaming_error_handling", "type": "Coroutine", "lineno": 312}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming::test_streaming_circuit_breaker_integration", "type": "Coroutine", "lineno": 329}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming::test_streaming_success_recording", "type": "Coroutine", "lineno": 344}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming::test_streaming_failure_recording", "type": "Coroutine", "lineno": 370}]}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestStreamingPerformance", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_streaming.py::TestStreamingPerformance::test_streaming_latency", "type": "Coroutine", "lineno": 406}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestStreamingPerformance::test_streaming_memory_efficiency", "type": "Coroutine", "lineno": 437}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestStreamingPerformance::test_streaming_concurrent_requests", "type": "Coroutine", "lineno": 460}]}, {"nodeid": "tests/unit/services/test_ai_streaming.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_streaming.py::TestAIStreaming", "type": "Class"}, {"nodeid": "tests/unit/services/test_ai_streaming.py::TestStreamingPerformance", "type": "Class"}]}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyOptimization", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyOptimization::test_performance_based_ttl_optimization", "type": "Function", "lineno": 64}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyOptimization::test_cache_warming_queue_management", "type": "Function", "lineno": 84}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyOptimization::test_should_warm_cache_logic", "type": "Function", "lineno": 111}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyOptimization::test_process_warming_queue", "type": "Coroutine", "lineno": 135}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyOptimization::test_intelligent_invalidation_triggers", "type": "Function", "lineno": 161}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyOptimization::test_framework_invalidation", "type": "Function", "lineno": 193}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyOptimization::test_cache_strategy_metrics_collection", "type": "Function", "lineno": 214}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyOptimization::test_cache_warming_queue_size_limit", "type": "Function", "lineno": 279}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyOptimization::test_performance_history_limit", "type": "Function", "lineno": 290}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyOptimization::test_ttl_adjustment_calculation_edge_cases", "type": "Function", "lineno": 301}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyOptimization::test_disabled_optimization_features", "type": "Function", "lineno": 319}]}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyIntegration::test_cache_strategy_metrics_endpoint_integration", "type": "Coroutine", "lineno": 383}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyIntegration::test_cache_warming_integration", "type": "Coroutine", "lineno": 399}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyIntegration::test_cache_invalidation_integration", "type": "Coroutine", "lineno": 416}]}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyOptimization", "type": "Class"}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py::TestCacheStrategyIntegration", "type": "Class"}]}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_cache_manager_initialization", "type": "Function", "lineno": 57}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_cache_key_generation", "type": "Function", "lineno": 64}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_business_profile_cache_key_generation", "type": "Function", "lineno": 82}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_employee_count_range_bucketing", "type": "Function", "lineno": 99}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_assessment_cache_content_building", "type": "Function", "lineno": 107}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_business_profile_cache_content_building", "type": "Function", "lineno": 121}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_framework_cache_content_building", "type": "Function", "lineno": 130}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_assessment_ttl_calculation", "type": "Function", "lineno": 141}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_business_profile_ttl_calculation", "type": "Function", "lineno": 158}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_framework_helper_methods", "type": "Function", "lineno": 170}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_data_processing_profile_generation", "type": "Function", "lineno": 180}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_technology_summary_generation", "type": "Function", "lineno": 193}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_compliance_maturity_assessment", "type": "Function", "lineno": 199}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_assessment_cache_creation_success", "type": "Coroutine", "lineno": 218}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_assessment_cache_creation_failure", "type": "Coroutine", "lineno": 243}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_cache_metrics_collection", "type": "Function", "lineno": 267}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_get_cached_content_hit", "type": "Function", "lineno": 284}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_get_cached_content_miss", "type": "Function", "lineno": 306}, {"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager::test_cleanup_expired_caches", "type": "Coroutine", "lineno": 315}]}, {"nodeid": "tests/unit/services/test_cached_content.py::TestCachedContentIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_cached_content.py::TestCachedContentIntegration::test_get_cached_content_manager_singleton", "type": "Coroutine", "lineno": 346}, {"nodeid": "tests/unit/services/test_cached_content.py::TestCachedContentIntegration::test_cache_lifecycle_config_defaults", "type": "Function", "lineno": 354}, {"nodeid": "tests/unit/services/test_cached_content.py::TestCachedContentIntegration::test_cache_content_type_enum", "type": "Function", "lineno": 364}]}, {"nodeid": "tests/unit/services/test_cached_content.py::TestCachedContentEndToEnd", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_cached_content.py::TestCachedContentEndToEnd::test_assessment_analysis_with_cached_content", "type": "Coroutine", "lineno": 419}, {"nodeid": "tests/unit/services/test_cached_content.py::TestCachedContentEndToEnd::test_cache_metrics_collection_integration", "type": "Coroutine", "lineno": 454}]}, {"nodeid": "tests/unit/services/test_cached_content.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_cached_content.py::TestGoogleCachedContentManager", "type": "Class"}, {"nodeid": "tests/unit/services/test_cached_content.py::TestCachedContentIntegration", "type": "Class"}, {"nodeid": "tests/unit/services/test_cached_content.py::TestCachedContentEndToEnd", "type": "Class"}]}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestContextAwareRecommendations", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestContextAwareRecommendations::test_get_context_aware_recommendations_success", "type": "Coroutine", "lineno": 69}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestContextAwareRecommendations::test_analyze_compliance_maturity", "type": "Coroutine", "lineno": 141}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestContextAwareRecommendations::test_categorize_organization_size", "type": "Function", "lineno": 165}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestContextAwareRecommendations::test_prioritize_recommendations", "type": "Function", "lineno": 175}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestContextAwareRecommendations::test_context_aware_recommendations_error_handling", "type": "Coroutine", "lineno": 211}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestContextAwareRecommendations::test_add_automation_insights", "type": "Function", "lineno": 227}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestContextAwareRecommendations::test_calculate_total_effort", "type": "Function", "lineno": 258}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestContextAwareRecommendations::test_get_fallback_recommendations", "type": "Function", "lineno": 277}]}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestWorkflowGeneration", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestWorkflowGeneration::test_generate_evidence_collection_workflow_success", "type": "Coroutine", "lineno": 305}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestWorkflowGeneration::test_calculate_workflow_effort", "type": "Function", "lineno": 356}]}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestPolicyGeneration", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestPolicyGeneration::test_generate_customized_policy_success", "type": "Coroutine", "lineno": 407}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestPolicyGeneration::test_apply_healthcare_customizations", "type": "Function", "lineno": 460}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestPolicyGeneration::test_apply_financial_customizations", "type": "Function", "lineno": 480}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestPolicyGeneration::test_apply_size_customizations", "type": "Function", "lineno": 500}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestPolicyGeneration::test_generate_policy_implementation_guidance", "type": "Function", "lineno": 519}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestPolicyGeneration::test_generate_compliance_mapping", "type": "Function", "lineno": 542}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestPolicyGeneration::test_get_fallback_policy", "type": "Function", "lineno": 560}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestPolicyGeneration::test_policy_generation_error_handling", "type": "Coroutine", "lineno": 578}]}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestContextAwareRecommendations", "type": "Class"}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestWorkflowGeneration", "type": "Class"}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py::TestPolicyGeneration", "type": "Class"}]}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI::test_ai_classify_evidence_success", "type": "Coroutine", "lineno": 42}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI::test_ai_classify_evidence_fallback", "type": "Coroutine", "lineno": 62}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI::test_parse_classification_response_valid", "type": "Function", "lineno": 75}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI::test_parse_classification_response_invalid", "type": "Function", "lineno": 89}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI::test_fallback_classification_policy", "type": "Function", "lineno": 100}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI::test_fallback_classification_training", "type": "Function", "lineno": 113}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI::test_fallback_classification_unknown", "type": "Function", "lineno": 126}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI::test_enrich_evidence_with_ai_high_confidence", "type": "Coroutine", "lineno": 138}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI::test_enrich_evidence_with_ai_low_confidence", "type": "Coroutine", "lineno": 160}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI::test_process_evidence_with_ai_preparation", "type": "Function", "lineno": 182}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI::test_generate_ai_response_success", "type": "Coroutine", "lineno": 201}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI::test_generate_ai_response_failure", "type": "Coroutine", "lineno": 214}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI::test_confidence_score_clamping", "type": "Function", "lineno": 223}]}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_evidence_processor_ai.py::TestEvidenceProcessorAI", "type": "Class"}]}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_create_evidence_item_success", "type": "Coroutine", "lineno": 21}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_create_evidence_item_validation_error", "type": "Coroutine", "lineno": 49}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_validate_evidence_quality_high_score", "type": "Function", "lineno": 63}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_validate_evidence_quality_low_score", "type": "Function", "lineno": 100}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_identify_evidence_requirements_success", "type": "Function", "lineno": 138}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_configure_automation_success", "type": "Function", "lineno": 177}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_configure_automation_connection_failure", "type": "Function", "lineno": 211}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_get_user_evidence_items_success", "type": "Function", "lineno": 244}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_get_user_evidence_items_empty", "type": "Function", "lineno": 273}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_update_evidence_status_success", "type": "Function", "lineno": 283}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_search_evidence_by_framework", "type": "Function", "lineno": 307}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_delete_evidence_item_success", "type": "Function", "lineno": 339}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_delete_evidence_item_not_found", "type": "Function", "lineno": 357}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_bulk_update_evidence_status", "type": "Function", "lineno": 367}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService::test_get_evidence_statistics", "type": "Function", "lineno": 396}]}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceValidation", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceValidation::test_validate_evidence_type_document", "type": "Function", "lineno": 423}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceValidation::test_validate_evidence_type_log", "type": "Function", "lineno": 447}]}, {"nodeid": "tests/unit/services/test_evidence_service.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceService", "type": "Class"}, {"nodeid": "tests/unit/services/test_evidence_service.py::TestEvidenceValidation", "type": "Class"}]}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent::test_agent_initialization", "type": "Coroutine", "lineno": 77}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent::test_process_query_success", "type": "Coroutine", "lineno": 85}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent::test_process_query_error_handling", "type": "Coroutine", "lineno": 102}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent::test_perceive_node_compliance_analysis", "type": "Coroutine", "lineno": 117}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent::test_plan_node_action_generation", "type": "Coroutine", "lineno": 156}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent::test_act_node_autonomous_execution", "type": "Coroutine", "lineno": 209}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent::test_learn_node_pattern_detection", "type": "Coroutine", "lineno": 261}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent::test_remember_node_memory_consolidation", "type": "Coroutine", "lineno": 304}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent::test_autonomy_decision_making", "type": "Coroutine", "lineno": 341}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent::test_risk_posture_calculation", "type": "Coroutine", "lineno": 365}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent::test_regulation_code_extraction", "type": "Coroutine", "lineno": 391}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent::test_cost_and_timeline_estimation", "type": "Coroutine", "lineno": 406}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent::test_response_formatting", "type": "Coroutine", "lineno": 426}]}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQAgentIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_iq_agent.py::TestIQAgentIntegration::test_create_iq_agent_factory", "type": "Coroutine", "lineno": 503}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQAgentIntegration::test_end_to_end_compliance_query", "type": "Coroutine", "lineno": 515}]}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQAgentPerformance", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_iq_agent.py::TestIQAgentPerformance::test_query_processing_performance", "type": "Coroutine", "lineno": 544}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQAgentPerformance::test_memory_usage_efficiency", "type": "Coroutine", "lineno": 572}]}, {"nodeid": "tests/unit/services/test_iq_agent.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_iq_agent.py::TestIQComplianceAgent", "type": "Class"}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQAgentIntegration", "type": "Class"}, {"nodeid": "tests/unit/services/test_iq_agent.py::TestIQAgentPerformance", "type": "Class"}]}, {"nodeid": "tests/unit/services/test_iq_agent_enhanced.py::TestIQComplianceAgentEnhanced", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_iq_agent_enhanced.py::TestIQComplianceAgentEnhanced::test_agent_initialization_with_dual_db", "type": "Coroutine", "lineno": 119}, {"nodeid": "tests/unit/services/test_iq_agent_enhanced.py::TestIQComplianceAgentEnhanced::test_query_combines_both_databases", "type": "Coroutine", "lineno": 133}, {"nodeid": "tests/unit/services/test_iq_agent_enhanced.py::TestIQComplianceAgentEnhanced::test_fallback_to_neo4j_only", "type": "Coroutine", "lineno": 240}, {"nodeid": "tests/unit/services/test_iq_agent_enhanced.py::TestIQComplianceAgentEnhanced::test_retrieve_business_evidence", "type": "Coroutine", "lineno": 270}, {"nodeid": "tests/unit/services/test_iq_agent_enhanced.py::TestIQComplianceAgentEnhanced::test_contextualized_compliance_assessment", "type": "Coroutine", "lineno": 300}, {"nodeid": "tests/unit/services/test_iq_agent_enhanced.py::TestIQComplianceAgentEnhanced::test_error_handling_postgres_failure", "type": "Coroutine", "lineno": 341}, {"nodeid": "tests/unit/services/test_iq_agent_enhanced.py::TestIQComplianceAgentEnhanced::test_session_history_integration", "type": "Coroutine", "lineno": 380}, {"nodeid": "tests/unit/services/test_iq_agent_enhanced.py::TestIQComplianceAgentEnhanced::test_combined_search_capabilities", "type": "Coroutine", "lineno": 414}]}, {"nodeid": "tests/unit/services/test_iq_agent_enhanced.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_iq_agent_enhanced.py::TestIQComplianceAgentEnhanced", "type": "Class"}]}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer::test_calculate_enhanced_score_success", "type": "Coroutine", "lineno": 46}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer::test_calculate_enhanced_score_fallback", "type": "Coroutine", "lineno": 74}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer::test_prepare_content_for_analysis", "type": "Function", "lineno": 86}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer::test_parse_quality_response_valid", "type": "Function", "lineno": 95}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer::test_parse_quality_response_invalid", "type": "Function", "lineno": 117}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer::test_fallback_quality_analysis", "type": "Function", "lineno": 126}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer::test_calculate_traditional_scores", "type": "Function", "lineno": 137}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer::test_combine_traditional_and_ai_scores", "type": "Function", "lineno": 147}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer::test_detect_semantic_duplicates_success", "type": "Coroutine", "lineno": 169}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer::test_detect_semantic_duplicates_no_matches", "type": "Coroutine", "lineno": 202}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer::test_parse_similarity_response_valid", "type": "Function", "lineno": 232}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer::test_parse_similarity_response_invalid", "type": "Function", "lineno": 249}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer::test_batch_duplicate_detection", "type": "Coroutine", "lineno": 259}]}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py::TestEnhancedQualityScorer", "type": "Class"}]}, {"nodeid": "tests/unit/services", "outcome": "passed", "result": [{"nodeid": "tests/unit/services/test_ai_assistant.py", "type": "Module"}, {"nodeid": "tests/unit/services/test_ai_caching_performance.py", "type": "Module"}, {"nodeid": "tests/unit/services/test_ai_circuit_breaker.py", "type": "Module"}, {"nodeid": "tests/unit/services/test_ai_model_selection.py", "type": "Module"}, {"nodeid": "tests/unit/services/test_ai_streaming.py", "type": "Module"}, {"nodeid": "tests/unit/services/test_cache_strategy_optimization.py", "type": "Module"}, {"nodeid": "tests/unit/services/test_cached_content.py", "type": "Module"}, {"nodeid": "tests/unit/services/test_enhanced_ai_assistant.py", "type": "Module"}, {"nodeid": "tests/unit/services/test_evidence_processor_ai.py", "type": "Module"}, {"nodeid": "tests/unit/services/test_evidence_service.py", "type": "Module"}, {"nodeid": "tests/unit/services/test_iq_agent.py", "type": "Module"}, {"nodeid": "tests/unit/services/test_iq_agent_enhanced.py", "type": "Module"}, {"nodeid": "tests/unit/services/test_quality_scorer_enhanced.py", "type": "Module"}]}, {"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption::test_encryption_initialization", "type": "Function", "lineno": 21}, {"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption::test_encryption_initialization_missing_key", "type": "Function", "lineno": 31}, {"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption::test_encryption_initialization_short_key", "type": "Function", "lineno": 37}, {"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption::test_encrypt_decrypt_credentials", "type": "Function", "lineno": 43}, {"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption::test_encrypt_empty_credentials", "type": "Function", "lineno": 65}, {"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption::test_encrypt_invalid_type", "type": "Function", "lineno": 75}, {"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption::test_decrypt_invalid_data", "type": "Function", "lineno": 85}, {"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption::test_decrypt_empty_string", "type": "Function", "lineno": 95}, {"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption::test_credential_integrity_check", "type": "Function", "lineno": 105}, {"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption::test_encryption_versioning", "type": "Function", "lineno": 121}, {"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption::test_key_rotation", "type": "Function", "lineno": 135}, {"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption::test_encryption_health_check", "type": "Function", "lineno": 158}]}, {"nodeid": "tests/unit/test_credential_encryption.py::TestConvenienceFunctions", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_credential_encryption.py::TestConvenienceFunctions::test_encrypt_credentials_function", "type": "Function", "lineno": 178}, {"nodeid": "tests/unit/test_credential_encryption.py::TestConvenienceFunctions::test_decrypt_credentials_function", "type": "Function", "lineno": 189}, {"nodeid": "tests/unit/test_credential_encryption.py::TestConvenienceFunctions::test_verify_encryption_health_function", "type": "Function", "lineno": 201}]}, {"nodeid": "tests/unit/test_credential_encryption.py::TestEdgeCases", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_credential_encryption.py::TestEdgeCases::test_large_credentials", "type": "Function", "lineno": 215}, {"nodeid": "tests/unit/test_credential_encryption.py::TestEdgeCases::test_unicode_credentials", "type": "Function", "lineno": 234}, {"nodeid": "tests/unit/test_credential_encryption.py::TestEdgeCases::test_special_characters", "type": "Function", "lineno": 252}]}, {"nodeid": "tests/unit/test_credential_encryption.py::TestSecurityProperties", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_credential_encryption.py::TestSecurityProperties::test_different_keys_produce_different_ciphertexts", "type": "Function", "lineno": 275}, {"nodeid": "tests/unit/test_credential_encryption.py::TestSecurityProperties::test_same_data_different_ciphertexts", "type": "Function", "lineno": 294}, {"nodeid": "tests/unit/test_credential_encryption.py::TestSecurityProperties::test_tampered_ciphertext_detection", "type": "Function", "lineno": 315}]}, {"nodeid": "tests/unit/test_credential_encryption.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_credential_encryption.py::TestCredentialEncryption", "type": "Class"}, {"nodeid": "tests/unit/test_credential_encryption.py::TestConvenienceFunctions", "type": "Class"}, {"nodeid": "tests/unit/test_credential_encryption.py::TestEdgeCases", "type": "Class"}, {"nodeid": "tests/unit/test_credential_encryption.py::TestSecurityProperties", "type": "Class"}]}, {"nodeid": "tests/unit/test_integration_service.py::TestIntegrationService", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_integration_service.py::TestIntegrationService::test_store_integration_config_new", "type": "Coroutine", "lineno": 72}, {"nodeid": "tests/unit/test_integration_service.py::TestIntegrationService::test_store_integration_config_update_existing", "type": "Coroutine", "lineno": 107}, {"nodeid": "tests/unit/test_integration_service.py::TestIntegrationService::test_get_user_integrations", "type": "Coroutine", "lineno": 150}, {"nodeid": "tests/unit/test_integration_service.py::TestIntegrationService::test_get_integration_by_id", "type": "Coroutine", "lineno": 184}, {"nodeid": "tests/unit/test_integration_service.py::TestIntegrationService::test_decrypt_integration_credentials", "type": "Coroutine", "lineno": 209}, {"nodeid": "tests/unit/test_integration_service.py::TestIntegrationService::test_update_integration_health", "type": "Coroutine", "lineno": 230}, {"nodeid": "tests/unit/test_integration_service.py::TestIntegrationService::test_delete_integration", "type": "Coroutine", "lineno": 265}]}, {"nodeid": "tests/unit/test_integration_service.py::TestEvidenceCollectionService", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_integration_service.py::TestEvidenceCollectionService::test_create_evidence_collection", "type": "Coroutine", "lineno": 318}, {"nodeid": "tests/unit/test_integration_service.py::TestEvidenceCollectionService::test_update_collection_status", "type": "Coroutine", "lineno": 354}, {"nodeid": "tests/unit/test_integration_service.py::TestEvidenceCollectionService::test_store_evidence_item", "type": "Coroutine", "lineno": 391}, {"nodeid": "tests/unit/test_integration_service.py::TestEvidenceCollectionService::test_get_collection_status", "type": "Coroutine", "lineno": 439}, {"nodeid": "tests/unit/test_integration_service.py::TestEvidenceCollectionService::test_get_collection_evidence", "type": "Coroutine", "lineno": 465}]}, {"nodeid": "tests/unit/test_integration_service.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_integration_service.py::TestIntegrationService", "type": "Class"}, {"nodeid": "tests/unit/test_integration_service.py::TestEvidenceCollectionService", "type": "Class"}]}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerStates", "outcome": "passed", "result": [{"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerStates::test_circuit_breaker_initial_state", "type": "Function", "lineno": 24}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerStates::test_circuit_breaker_custom_config", "type": "Function", "lineno": 32}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerStates::test_circuit_breaker_opens_after_failures", "type": "Coroutine", "lineno": 45}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerStates::test_circuit_breaker_blocks_calls_when_open", "type": "Coroutine", "lineno": 67}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerStates::test_circuit_breaker_transitions_to_half_open", "type": "Coroutine", "lineno": 89}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerStates::test_circuit_breaker_closes_after_successful_calls", "type": "Coroutine", "lineno": 110}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerStates::test_circuit_breaker_reopens_on_failure_in_half_open", "type": "Coroutine", "lineno": 148}]}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerTimeout", "outcome": "passed", "result": [{"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerTimeout::test_circuit_breaker_timeout_success", "type": "Coroutine", "lineno": 188}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerTimeout::test_circuit_breaker_timeout_failure", "type": "Coroutine", "lineno": 202}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerTimeout::test_circuit_breaker_no_timeout_when_disabled", "type": "Coroutine", "lineno": 217}]}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerExceptionHandling", "outcome": "passed", "result": [{"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerExceptionHandling::test_circuit_breaker_handles_expected_exceptions", "type": "Coroutine", "lineno": 235}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerExceptionHandling::test_circuit_breaker_ignores_unexpected_exceptions", "type": "Coroutine", "lineno": 260}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerExceptionHandling::test_circuit_breaker_handles_multiple_exception_types", "type": "Coroutine", "lineno": 276}]}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerDecorator", "outcome": "passed", "result": [{"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerDecorator::test_circuit_breaker_decorator_usage", "type": "Coroutine", "lineno": 307}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerDecorator::test_circuit_breaker_decorator_preserves_function_metadata", "type": "Coroutine", "lineno": 334}]}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerMetrics", "outcome": "passed", "result": [{"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerMetrics::test_circuit_breaker_exception_details", "type": "Function", "lineno": 353}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerMetrics::test_circuit_breaker_state_timing", "type": "Function", "lineno": 368}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerMetrics::test_circuit_breaker_success_tracking", "type": "Coroutine", "lineno": 379}]}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestPreconfiguredCircuitBreakers", "outcome": "passed", "result": [{"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestPreconfiguredCircuitBreakers::test_openai_circuit_breaker_config", "type": "Function", "lineno": 418}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestPreconfiguredCircuitBreakers::test_google_circuit_breaker_config", "type": "Function", "lineno": 427}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestPreconfiguredCircuitBreakers::test_aws_circuit_breaker_config", "type": "Function", "lineno": 436}]}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerConcurrency", "outcome": "passed", "result": [{"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerConcurrency::test_circuit_breaker_concurrent_calls", "type": "Coroutine", "lineno": 450}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerConcurrency::test_circuit_breaker_lock_prevents_race_conditions", "type": "Coroutine", "lineno": 478}]}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerStates", "type": "Class"}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerTimeout", "type": "Class"}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerExceptionHandling", "type": "Class"}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerDecorator", "type": "Class"}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerMetrics", "type": "Class"}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestPreconfiguredCircuitBreakers", "type": "Class"}, {"nodeid": "tests/unit/utils/test_circuit_breaker.py::TestCircuitBreakerConcurrency", "type": "Class"}]}, {"nodeid": "tests/unit/utils", "outcome": "passed", "result": [{"nodeid": "tests/unit/utils/test_circuit_breaker.py", "type": "Module"}]}, {"nodeid": "tests/unit", "outcome": "passed", "result": [{"nodeid": "tests/unit/models", "type": "Package"}, {"nodeid": "tests/unit/services", "type": "Package"}, {"nodeid": "tests/unit/test_credential_encryption.py", "type": "Module"}, {"nodeid": "tests/unit/test_integration_service.py", "type": "Module"}, {"nodeid": "tests/unit/utils", "type": "Package"}]}, {"nodeid": "tests/utils", "outcome": "passed", "result": []}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/ai", "type": "Package"}, {"nodeid": "tests/base", "type": "Dir"}, {"nodeid": "tests/consistency", "type": "Dir"}, {"nodeid": "tests/database", "type": "Dir"}, {"nodeid": "tests/e2e", "type": "Package"}, {"nodeid": "tests/fixtures", "type": "Package"}, {"nodeid": "tests/integration", "type": "Package"}, {"nodeid": "tests/load", "type": "Dir"}, {"nodeid": "tests/mocks", "type": "Dir"}, {"nodeid": "tests/models", "type": "Dir"}, {"nodeid": "tests/monitoring", "type": "Package"}, {"nodeid": "tests/performance", "type": "Package"}, {"nodeid": "tests/security", "type": "Package"}, {"nodeid": "tests/test-utility-scripts", "type": "Dir"}, {"nodeid": "tests/test_agentic_rag.py", "type": "Module"}, {"nodeid": "tests/test_ai_assessment_endpoints_integration.py", "type": "Module"}, {"nodeid": "tests/test_ai_authentication_fix.py", "type": "Module"}, {"nodeid": "tests/test_ai_cost_management.py", "type": "Module"}, {"nodeid": "tests/test_ai_ethics.py", "type": "Module"}, {"nodeid": "tests/test_ai_neon.py", "type": "Module"}, {"nodeid": "tests/test_ai_policy_functional.py", "type": "Module"}, {"nodeid": "tests/test_ai_policy_generator.py", "type": "Module"}, {"nodeid": "tests/test_ai_policy_simple.py", "type": "Module"}, {"nodeid": "tests/test_ai_quick.py", "type": "Module"}, {"nodeid": "tests/test_ai_rate_limiting.py", "type": "Module"}, {"nodeid": "tests/test_ai_simple.py", "type": "Module"}, {"nodeid": "tests/test_analytics_direct.py", "type": "Module"}, {"nodeid": "tests/test_api_endpoints.py", "type": "Module"}, {"nodeid": "tests/test_app.py", "type": "Module"}, {"nodeid": "tests/test_assessment_workflow_e2e.py", "type": "Module"}, {"nodeid": "tests/test_auth_fix.py", "type": "Module"}, {"nodeid": "tests/test_auth_flow.py", "type": "Module"}, {"nodeid": "tests/test_compliance_accuracy.py", "type": "Module"}, {"nodeid": "tests/test_compliance_assistant_assessment.py", "type": "Module"}, {"nodeid": "tests/test_database_performance.py", "type": "Module"}, {"nodeid": "tests/test_db_connection.py", "type": "Module"}, {"nodeid": "tests/test_db_init.py", "type": "Module"}, {"nodeid": "tests/test_e2e_workflows.py", "type": "Module"}, {"nodeid": "tests/test_fixture_isolation.py", "type": "Module"}, {"nodeid": "tests/test_freemium_simple.py", "type": "Module"}, {"nodeid": "tests/test_graph_execution.py", "type": "Module"}, {"nodeid": "tests/test_hybrid_approach.py", "type": "Module"}, {"nodeid": "tests/test_input_validation.py", "type": "Module"}, {"nodeid": "tests/test_integration.py", "type": "Module"}, {"nodeid": "tests/test_login.py", "type": "Module"}, {"nodeid": "tests/test_master_integration.py", "type": "Module"}, {"nodeid": "tests/test_minimal.py", "type": "Module"}, {"nodeid": "tests/test_mistral_embeddings.py", "type": "Module"}, {"nodeid": "tests/test_performance.py", "type": "Module"}, {"nodeid": "tests/test_phase1_endpoints.py", "type": "Module"}, {"nodeid": "tests/test_phase1_fastapi.py", "type": "Module"}, {"nodeid": "tests/test_phase1_state_management.py", "type": "Module"}, {"nodeid": "tests/test_phase2_error_handling.py", "type": "Module"}, {"nodeid": "tests/test_phase2_fastapi.py", "type": "Module"}, {"nodeid": "tests/test_phase3_fastapi.py", "type": "Module"}, {"nodeid": "tests/test_phase3_rag_standardization.py", "type": "Module"}, {"nodeid": "tests/test_phase3_rag_standardization_simple.py", "type": "Module"}, {"nodeid": "tests/test_phase4_celery_migration.py", "type": "Module"}, {"nodeid": "tests/test_rag_critic.py", "type": "Module"}, {"nodeid": "tests/test_rag_processing.py", "type": "Module"}, {"nodeid": "tests/test_rbac_system.py", "type": "Module"}, {"nodeid": "tests/test_sanity_check.py", "type": "Module"}, {"nodeid": "tests/test_security.py", "type": "Module"}, {"nodeid": "tests/test_services.py", "type": "Module"}, {"nodeid": "tests/test_settings.py", "type": "Module"}, {"nodeid": "tests/test_simple_settings.py", "type": "Module"}, {"nodeid": "tests/test_sprint_management.py", "type": "Module"}, {"nodeid": "tests/test_stack_auth.py", "type": "Module"}, {"nodeid": "tests/test_state_management.py", "type": "Module"}, {"nodeid": "tests/test_supabase_rag.py", "type": "Module"}, {"nodeid": "tests/test_uk_compliance_frameworks.py", "type": "Module"}, {"nodeid": "tests/test_usability.py", "type": "Module"}, {"nodeid": "tests/test_validation.py", "type": "Module"}, {"nodeid": "tests/testsprite_generated", "type": "Package"}, {"nodeid": "tests/unit", "type": "Package"}, {"nodeid": "tests/utils", "type": "Package"}]}], "tests": [], "warnings": [{"message": "cannot collect test class 'TestMetricsCollector' because it has a __init__ constructor (from: tests/monitoring/test_metrics.py)", "category": "PytestCollectionWarning", "when": "collect", "filename": "/home/omar/Documents/ruleIQ/tests/monitoring/test_metrics.py", "lineno": 17}, {"message": "cannot collect test class 'TestSettings' because it has a __init__ constructor (from: tests/test_simple_settings.py)", "category": "PytestCollectionWarning", "when": "collect", "filename": "/home/omar/Documents/ruleIQ/tests/test_simple_settings.py", "lineno": 33}, {"message": "cannot collect test class 'TestScenario' because it has a __init__ constructor (from: tests/test_state_management.py)", "category": "PytestCollectionWarning", "when": "collect", "filename": "/home/omar/Documents/ruleIQ/tests/fixtures/state_fixtures.py", "lineno": 20}]}