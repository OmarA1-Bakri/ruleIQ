version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8000:8000"
    env_file:
      - .env.local
    environment:
      - PYTHONPATH=/app
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - compliancegpt-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery_worker:
    build: 
      context: .
      dockerfile: Dockerfile  
      target: production
    command: celery -A celery_app worker --loglevel=info --concurrency=2 --pool=solo --traceback --queues=evidence,compliance,notifications,reports
    env_file:
      - .env.local
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - compliancegpt-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "celery", "-A", "celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  celery_beat:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    command: celery -A celery_app beat --loglevel=info
    env_file:
      - .env.local
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - celerybeat_schedule:/app/celerybeat-schedule
    restart: unless-stopped
    networks:
      - compliancegpt-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  redis:
    image: redis:7-alpine
    ports:
      - "127.0.0.1:6379:6379"  # Bind to localhost only
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - compliancegpt-network

volumes:
  redis_data:
    driver: local
  celerybeat_schedule:
    driver: local

networks:
  compliancegpt-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16